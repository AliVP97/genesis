/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/admin/error/create": {
    post: operations["Admin_CreateError"];
  };
  "/v1/admin/error/list": {
    get: operations["Admin_GetErrors"];
  };
  "/v1/admin/error/update": {
    post: operations["Admin_UpdateError"];
  };
  "/v1/product/error": {
    get: operations["Product_GetPaymentErrors"];
  };
  "/v1/product/gateway": {
    get: operations["Product_Gateway"];
  };
  "/v1/product/order": {
    get: operations["Product_Get"];
    post: operations["Product_Order"];
  };
  "/v1/product/order/{orderId}": {
    get: operations["Product_OrderStatus"];
  };
  "/v1/product/wallet/order": {
    post: operations["Product_WalletOrder"];
  };
  "/v2/product/invoice": {
    post: operations["Product_Invoice"];
  };
  "/v2/product/receipt/{orderId}": {
    get: operations["Product_OrderReceipt"];
  };
}

export interface definitions {
  GetPaymentErrorsResponseerror: {
    /** Format: int64 */
    id: string;
    message: string;
    description: string;
    status: string;
  };
  apipaymentCreateErrorRequest: {
    message: string;
    lang: string;
    /** Format: int64 */
    httpCode: number;
    /** Format: int32 */
    code: number;
    /** Format: int64 */
    serviceCode: number;
    type: string;
    status: string;
    description: string;
  };
  apipaymentError: {
    /** Format: int32 */
    id: number;
    message: string;
    lang: string;
    /** Format: int64 */
    httpCode: number;
    /** Format: int32 */
    code: number;
    status: string;
    type: string;
    description: string;
  };
  apipaymentErrorCreateResponse: {
    /** Format: int64 */
    code: number;
    message: string;
  };
  apipaymentErrorListResponse: {
    /** Format: int64 */
    code: number;
    message: string;
    data: definitions["apipaymentError"][];
  };
  apipaymentErrorUpdateResponse: {
    /** Format: int64 */
    code: number;
    message: string;
  };
  apipaymentGateway: {
    /** Format: int64 */
    id: number;
    name: string;
    paymentType: string;
    paymentMethod: string;
    label: string;
    fee: string;
    balance?: string;
    expireDate?: string;
    sections?: definitions["paymentBreakdownSection"][];
    toast?: string;
    modal?: string;
  };
  googlerpcStatus: {
    /** Format: int32 */
    code?: number;
    message?: string;
    details?: definitions["protobufAny"][];
  };
  paymentBreakdownItem: {
    id?: string;
    label?: string;
    labelDescription?: string;
    valuePrefix?: string;
    value?: string;
    valueSuffix?: string;
    valueIcon?: string;
    valueColor?: string;
    valueIsBold?: boolean;
    valueCopiable?: boolean;
  };
  paymentBreakdownSection: {
    id?: string;
    type?: string;
    text?: string;
    items?: definitions["paymentBreakdownItem"][];
  };
  paymentGatewayResponse: {
    data: definitions["apipaymentGateway"][];
  };
  paymentGetPaymentErrorsResponse: {
    data: definitions["GetPaymentErrorsResponseerror"][];
  };
  paymentInvoiceMeta: {
    /** Format: int64 */
    serviceId?: number;
    serviceName?: string;
    /** Format: int64 */
    price?: string;
  };
  paymentInvoiceRequest: {
    orderId?: string;
  };
  paymentInvoiceResponse: {
    title?: string;
    sections?: definitions["paymentBreakdownSection"][];
    gateways?: definitions["apipaymentGateway"][];
    meta?: definitions["paymentInvoiceMeta"];
  };
  paymentOrderMessage: {
    /** Format: int64 */
    price: string;
    mask: string;
    serviceName: string;
    status: string;
    /** Format: int64 */
    saleReferenceId: string;
    orderId: string;
    createdAt: string;
    message: string;
    data: { [key: string]: string };
    userID: string;
  };
  paymentOrderReceiptResponse: {
    status?: definitions["paymentReceiptStatus"];
    tips?: definitions["paymentReceiptTip"][];
    sections?: definitions["paymentBreakdownSection"][];
    buttons?: definitions["paymentReceiptButton"][];
    meta?: definitions["paymentReceiptMeta"];
  };
  paymentOrderRequest: {
    orderId: string;
    /** Format: int64 */
    gatewayId: number;
    callback?: string;
    receiptCta?: string;
  };
  paymentOrderResponse: {
    refId?: string;
    /** Format: int64 */
    price?: number;
    paymentGateway?: string;
    otp?: string;
    orderId?: string;
    paymentMethod?: string;
  };
  paymentOrderStatusResponse: {
    /** Format: int64 */
    price: number;
    mask: string;
    serviceName: string;
    status: string;
    /** Format: int64 */
    saleReferenceId: string;
    createdAt: string;
    message: string;
    data: { [key: string]: string };
  };
  paymentOrderWalletResponse: {
    ReferenceId?: string;
    SellReferenceId?: string;
    CardMask?: string;
    CardHash?: string;
    /** Format: int64 */
    FinalAmount?: string;
    OrderId?: string;
    /** Format: int32 */
    Status?: number;
    /** Format: int64 */
    Date?: string;
    ServiceName?: string;
    MapData?: { [key: string]: string };
    /** Format: int64 */
    price?: string;
    paymentGateway?: string;
    otp?: string;
    paymentMethod?: string;
    refId?: string;
  };
  paymentReceiptButton: {
    id?: string;
    type?: string;
    text?: string;
    color?: string;
    cta?: string;
  };
  paymentReceiptMeta: {
    /** Format: int64 */
    serviceId?: number;
    serviceName?: string;
    /** Format: int64 */
    price?: string;
    rrn?: string;
    orderId?: string;
    providerName?: string;
    subserviceName?: string;
  };
  paymentReceiptStatus: {
    type?: string;
    text?: string;
  };
  paymentReceiptTip: {
    id?: string;
    type?: string;
    text?: string;
  };
  /**
   * @default success
   * @enum {string}
   */
  paymentTransactionHistoryRequestStatus: "success" | "failed";
  paymentTransactionHistoryResponse: {
    /** Format: int64 */
    total: number;
    /** Format: int64 */
    page: number;
    data: definitions["paymentOrderMessage"][];
  };
  protobufAny: {
    "@type"?: string;
  } & { [key: string]: unknown };
}

export interface operations {
  Admin_CreateError: {
    parameters: {
      body: {
        body: definitions["apipaymentCreateErrorRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["apipaymentErrorCreateResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["googlerpcStatus"];
      };
    };
  };
  Admin_GetErrors: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["apipaymentErrorListResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["googlerpcStatus"];
      };
    };
  };
  Admin_UpdateError: {
    parameters: {
      body: {
        body: definitions["apipaymentError"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["apipaymentErrorUpdateResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["googlerpcStatus"];
      };
    };
  };
  Product_GetPaymentErrors: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["paymentGetPaymentErrorsResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["googlerpcStatus"];
      };
    };
  };
  Product_Gateway: {
    parameters: {
      query: {
        serviceId: number;
        providerId?: string;
        price?: string;
        abount?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["paymentGatewayResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["googlerpcStatus"];
      };
    };
  };
  Product_Get: {
    parameters: {
      query: {
        limit: number;
        offset: number;
        userId: string;
        status?: "success" | "failed";
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["paymentTransactionHistoryResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["googlerpcStatus"];
      };
    };
  };
  Product_Order: {
    parameters: {
      body: {
        body: definitions["paymentOrderRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["paymentOrderResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["googlerpcStatus"];
      };
    };
  };
  Product_OrderStatus: {
    parameters: {
      path: {
        orderId: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["paymentOrderStatusResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["googlerpcStatus"];
      };
    };
  };
  Product_WalletOrder: {
    parameters: {
      body: {
        body: definitions["paymentOrderRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["paymentOrderWalletResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["googlerpcStatus"];
      };
    };
  };
  Product_Invoice: {
    parameters: {
      body: {
        body: definitions["paymentInvoiceRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["paymentInvoiceResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["googlerpcStatus"];
      };
    };
  };
  Product_OrderReceipt: {
    parameters: {
      path: {
        orderId: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["paymentOrderReceiptResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["googlerpcStatus"];
      };
    };
  };
}

export interface external {}
