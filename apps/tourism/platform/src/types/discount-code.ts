/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/admin/client-service": {
    /** Only admins can access this route */
    get: {
      responses: {
        /** OK */
        200: {
          schema: definitions["response.HttpSuccessResponse"] & {
            data?: definitions["entity.ClientService"][];
          };
        };
        /** Bad Request */
        400: {
          schema: definitions["response.AppHttpErrorImpl"];
        };
      };
    };
  };
  "/admin/discount": {
    /** Only admins can access this route */
    get: {
      parameters: {
        query: {
          /** Discount ID */
          id?: string;
          /** Discount Code */
          code?: string;
          /** Business */
          business?: string;
          /** Status example: ENABLE DISABLE */
          status?: string;
          /** Expire Date example: 2006-01-02 */
          expireDate?: string;
          /** Page */
          page?: string;
          /** Page Size */
          pageSize?: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["response.HttpSuccessResponse"] & {
            data?: definitions["response.PaginatedResponse"] & {
              list?: definitions["entity.Discount"][];
            };
          };
        };
        /** Bad Request */
        400: {
          schema: definitions["response.AppHttpErrorImpl"];
        };
      };
    };
    post: {
      parameters: {
        body: {
          /** Discount JSON */
          discount: definitions["dto.CreateDiscountRequest"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["response.HttpSuccessResponse"] & {
            data?: definitions["entity.Discount"];
          };
        };
        /** Bad Request */
        400: {
          schema: definitions["response.AppHttpErrorImpl"];
        };
      };
    };
  };
  "/admin/discount/{id}": {
    /** Only admins can access this route */
    get: {
      parameters: {
        path: {
          /** DiscountID */
          id: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["response.HttpSuccessResponse"] & {
            data?: definitions["entity.Discount"];
          };
        };
        /** Bad Request */
        400: {
          schema: definitions["response.AppHttpErrorImpl"];
        };
      };
    };
  };
  "/admin/discount/{id}/status": {
    /** This endpoint can change discount status to ENABLE or DISABLE */
    patch: {
      parameters: {
        path: {
          /** DiscountID */
          id: string;
        };
        body: {
          /** Discount Status JSON */
          status: definitions["dto.UpdateDiscountStatusRequest"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["response.HttpSuccessResponse"] & {
            message?: string;
          };
        };
        /** Bad Request */
        400: {
          schema: definitions["response.AppHttpErrorImpl"];
        };
      };
    };
  };
  "/available": {
    get: {
      responses: {
        /** OK */
        200: {
          schema: definitions["response.HttpSuccessResponse"] & {
            data?: definitions["entity.Discount"][];
          };
        };
        /** Bad Request */
        400: {
          schema: definitions["response.AppHttpErrorImpl"];
        };
      };
    };
  };
}

export interface definitions {
  "dto.CreateDiscountRequest": {
    clientServices: number[];
    code: string;
    description?: string;
    /** @enum {undefined} */
    discountType: "percentage" | "fixed";
    discountValue: number;
    expireDate: string;
    fileUrl?: string;
    maxBudget?: number;
    maxUses?: number;
    maximumDiscountAmount?: number;
    metaData?: string;
    minimumPurchasePrice: number;
    startDate?: string;
    /** @enum {string} */
    userSegments: "all_users" | "database_group" | "file";
    usesPerUser?: number;
  };
  "dto.UpdateDiscountStatusRequest": {
    /** @enum {undefined} */
    status: "enable" | "disable";
  };
  "entity.ClientService": {
    androidDeepLink?: string;
    createdAt?: string;
    displayName?: string;
    icon?: string;
    id?: number;
    iosDeepLink?: string;
    name?: string;
    pwaDeepLink?: string;
    serviceID?: number;
    webDeepLink?: string;
  };
  "entity.Discount": {
    budgetUsed?: number;
    clientServices?: definitions["entity.ClientService"][];
    code?: string;
    createdAt?: string;
    creator?: string;
    daysToExpire?: number;
    daysToExpireString?: string;
    description?: string;
    discountType?: definitions["entity.DiscountType"];
    discountValue?: number;
    expireDate?: string;
    fileType?: string;
    fileUrl?: string;
    id?: string;
    maxBudget?: number;
    maxUses?: number;
    maximumDiscountAmount?: number;
    metaData?: string;
    minimumPurchasePrice?: number;
    segmentCount?: number;
    startDate?: string;
    status?: definitions["entity.DiscountStatus"];
    updatedAt?: string;
    usedString?: string;
    userSegments?: string;
    usesCount?: number;
    usesPerUser?: number;
  };
  /** @enum {string} */
  "entity.DiscountStatus": "enable" | "disable" | "expired";
  /** @enum {string} */
  "entity.DiscountType": "percentage" | "fixed";
  "errors.DetailObject": {
    field?: string;
    message?: string;
  };
  "response.AppHttpErrorImpl": {
    details?: definitions["errors.DetailObject"][];
    errorCode?: number;
    message?: string;
  };
  "response.HttpSuccessResponse": { [key: string]: unknown };
  "response.PaginatedResponse": {
    currentPage?: number;
    list?: unknown;
    pageSize?: number;
    totalCount?: number;
  };
}

export interface operations {}

export interface external {}
