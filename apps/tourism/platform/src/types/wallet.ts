/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/admin/error/create": {
    post: operations["Admin_CreateError"];
  };
  "/v1/admin/error/list": {
    get: operations["Admin_GetErrors"];
  };
  "/v1/admin/error/update": {
    post: operations["Admin_UpdateError"];
  };
  "/v1/admin/policy": {
    post: operations["Admin_GetPolicies"];
  };
  "/v1/wallet": {
    get: operations["User_GetWallet"];
    post: operations["User_CreateWallet"];
  };
  "/v1/wallet/card/delete/{cardId}": {
    delete: operations["User_DeleteCard"];
  };
  "/v1/wallet/card/list": {
    get: operations["User_Cards"];
  };
  "/v1/wallet/card/pin/{cardId}": {
    post: operations["User_PinCard"];
  };
  "/v1/wallet/create/page-info": {
    get: operations["User_CreateWalletPageInfo"];
  };
  "/v1/wallet/deposit": {
    post: operations["User_DepositWallet"];
  };
  "/v1/wallet/deposit/page-info": {
    get: operations["User_DepositWalletPageInfo"];
  };
  "/v1/wallet/get/page-info": {
    get: operations["User_GetWalletPageInfo"];
  };
  "/v1/wallet/gift": {
    post: operations["User_CreateGiftWallet"];
  };
  "/v1/wallet/gift/redirect": {
    get: operations["User_CreateGiftRedirect"];
  };
  "/v1/wallet/gift/transactions": {
    get: operations["User_GetAllGiftCards"];
  };
  "/v1/wallet/inquiry": {
    post: operations["User_InquiryTransaction"];
  };
  "/v1/wallet/transactions": {
    post: operations["User_TransactionsWallet"];
  };
  "/v1/wallet/transfer/page-info": {
    get: operations["User_TransferWalletPageInfo"];
  };
  "/v1/wallet/transfer/send-otp": {
    get: operations["User_TransferWalletSendOtp"];
  };
  "/v1/wallet/transfer/verify-otp": {
    post: operations["User_TransferWalletVerifyOtp"];
  };
  "/v1/wallet/verify-otp": {
    post: operations["User_CreateWalletVerifyOtp"];
  };
  "/v1/wallet/withdraw/page-info": {
    get: operations["User_WithdrawWalletPageInfo"];
  };
  "/v1/wallet/withdraw/send-otp": {
    get: operations["User_WithdrawWalletSendOtp"];
  };
  "/v1/wallet/withdraw/verify-otp": {
    post: operations["User_WithdrawWalletVerifyOtp"];
  };
  "/v1/wallet/{walletID}": {
    delete: operations["User_DeleteWallet"];
  };
}

export interface definitions {
  CreateWalletResponseOtp: {
    /** Format: int64 */
    expireAt?: string;
    /** Format: int64 */
    characterCount?: string;
  };
  GetWalletPageInfoResponseService: {
    key?: string;
    /** Format: int64 */
    serviceId?: number;
    value?: string;
  };
  TransactionsWalletResponseTransactionData: {
    key?: string;
    name?: string;
    value?: string;
  };
  /**
   * @default withdraw
   * @enum {string}
   */
  TransactionsWalletResponseTransactionTransactionType:
    | "withdraw"
    | "withdrawTransfer"
    | "deposit"
    | "depositTransfer";
  UserPinCardBody: {
    isPin?: boolean;
  };
  apiwalletCreateErrorRequest: {
    message?: string;
    lang?: string;
    /** Format: int64 */
    httpCode?: number;
    /** Format: int32 */
    code?: number;
    /** Format: int64 */
    serviceCode?: number;
    type?: string;
    status?: string;
    description?: string;
  };
  apiwalletError: {
    /** Format: int32 */
    id?: number;
    message?: string;
    lang?: string;
    /** Format: int64 */
    httpCode?: number;
    /** Format: int32 */
    code?: number;
    status?: string;
    type?: string;
    description?: string;
  };
  apiwalletErrorCreateResponse: {
    /** Format: int64 */
    code?: number;
    message?: string;
  };
  apiwalletErrorListResponse: {
    /** Format: int64 */
    code?: number;
    message?: string;
    data?: definitions["apiwalletError"][];
  };
  apiwalletErrorUpdateResponse: {
    /** Format: int64 */
    code?: number;
    message?: string;
  };
  apiwalletTransaction: {
    description?: string;
    /** Format: uint64 */
    amount?: string;
    /** Format: int64 */
    createdAt?: string;
    phoneNumber?: string;
    from?: string;
    to?: string;
    issueTracking?: string;
    type?: string;
    /** Format: uint64 */
    fee?: string;
    /** Format: uint64 */
    balance?: string;
    walletNumber?: string;
    sheba?: string;
    data?: definitions["walletTransactionData"][];
  };
  protobufAny: {
    "@type"?: string;
  } & { [key: string]: unknown };
  rpcStatus: {
    /** Format: int32 */
    code?: number;
    message?: string;
    details?: definitions["protobufAny"][];
  };
  walletCardsResponse: {
    cards?: definitions["walletCardsResponseCard"][];
  };
  walletCardsResponseCard: {
    id?: string;
    number?: string;
    type?: string;
    isPin?: boolean;
    /** Format: int64 */
    createdAt?: string;
  };
  walletCode: {
    feeType?: definitions["walletFeeType"];
    /** Format: int64 */
    feeValue?: string;
    /** Format: int64 */
    minAmountPerTransaction?: string;
    /** Format: int64 */
    maxAmountPerTransaction?: string;
    /** Format: int64 */
    maxAmountPerDay?: string;
    /** Format: int32 */
    maxCountPerDay?: number;
  };
  walletCreateGiftRedirectResponse: {
    webviewUrl?: string;
  };
  walletCreateGiftWalletRequest: {
    pan?: string;
  };
  walletCreateGiftWalletResponse: {
    status?: string;
    walletId?: string;
    amount?: string;
    expiration?: string;
  };
  walletCreateWalletPageInfoResponse: {
    description?: string;
    rule?: string;
    confirmText?: string;
    confirmDescription?: string;
  };
  walletCreateWalletRequest: {
    nationalCode?: string;
  };
  walletCreateWalletResponse: {
    phoneNumber?: string;
    nationalCode?: string;
    /** Format: uint64 */
    amount?: string;
    status?: string;
    otp?: definitions["CreateWalletResponseOtp"];
  };
  walletCreateWalletVerifyOtpRequest: {
    /** Format: int64 */
    otpCode?: string;
  };
  walletCreateWalletVerifyOtpResponse: {
    phoneNumber?: string;
    nationalCode?: string;
    /** Format: uint64 */
    amount?: string;
    status?: string;
  };
  walletDeleteCardResponse: {
    message?: string;
  };
  walletDeleteWalletResponse: {
    message?: string;
  };
  walletDepositWalletPageInfoResponse: {
    /** Format: uint64 */
    minPerTransaction?: string;
    /** Format: uint64 */
    maxPerTransaction?: string;
    /** Format: uint64 */
    fee?: string;
    description?: string;
    proposedAmounts?: string[];
    confirmText?: string;
    confirmDescription?: string;
  };
  walletDepositWalletRequest: {
    /** Format: uint64 */
    amount?: string;
  };
  walletDepositWalletResponse: {
    /** Format: int64 */
    serviceId?: number;
    orderId?: string;
    /** Format: uint64 */
    amount?: string;
    /** Format: uint64 */
    fee?: string;
    /** Format: int64 */
    createdAt?: string;
  };
  /**
   * @default FEE_TYPE_UNSPECIFIED
   * @enum {string}
   */
  walletFeeType: "FEE_TYPE_UNSPECIFIED" | "ACTUAL" | "PERCENTAGE";
  walletGetAllGiftWalletsResponse: {
    giftWallets?: definitions["walletWalletDetail"][];
  };
  walletGetWalletPageInfoResponse: {
    services?: definitions["GetWalletPageInfoResponseService"][];
    accountTurnoverText?: string;
    mainActions?: definitions["walletGetWalletPageInfoResponseAction"][];
  };
  walletGetWalletPageInfoResponseAction: {
    name?: string;
    label?: string;
    description?: string;
    isEnable?: boolean;
  };
  walletGetWalletResponse: {
    phoneNumber?: string;
    nationalCode?: string;
    /** Format: uint64 */
    amount?: string;
    status?: string;
    /** Format: int64 */
    serviceId?: number;
    label?: string;
  };
  walletInquiryTransactionRequest: {
    orderID?: string;
    transactionID?: string;
  };
  walletInquiryTransactionResponse: {
    orderID?: string;
    transactionID?: string;
    userID?: string;
    comment?: string;
    createdAt?: string;
    orderType?: string;
    transactionType?: string;
    trackingCode?: string;
    description?: string;
    /** Format: uint64 */
    amount?: string;
    phoneNumber?: string;
    from?: string;
    to?: string;
    issueTracking?: string;
    type?: definitions["walletInquiryTransactionResponseTransactionType"];
    /** Format: uint64 */
    fee?: string;
    /** Format: uint64 */
    balance?: string;
    walletNumber?: string;
    sheba?: string;
    /** string account */
    data?: definitions["walletInquiryTransactionResponseData"][];
  };
  walletInquiryTransactionResponseData: {
    key?: string;
    name?: string;
    value?: string;
  };
  /**
   * @default withdraw
   * @enum {string}
   */
  walletInquiryTransactionResponseTransactionType:
    | "withdraw"
    | "withdrawTransfer"
    | "deposit"
    | "depositTransfer";
  walletLimits: {
    /** Format: int64 */
    minBalance?: string;
    /** Format: int64 */
    maxBalance?: string;
    numberOfAccounts?: { [key: string]: number };
  };
  walletPinCardResponse: {
    message?: string;
  };
  walletPolicy: {
    /** Format: int64 */
    id?: number;
    entityType?: string;
    entityId?: string;
    settings?: definitions["walletSettings"];
    /** Format: int32 */
    priority?: number;
    isEnable?: boolean;
    createdAt?: string;
    updatedAt?: string;
  };
  walletPolicyGetRequest: {
    /** Format: int32 */
    page?: number;
    /** Format: int32 */
    perPage?: number;
  };
  walletPolicyResponse: {
    /** Format: uint64 */
    total?: string;
    /** Format: int32 */
    page?: number;
    /** Format: int32 */
    perPage?: number;
    policies?: definitions["walletPolicy"][];
  };
  walletSettings: {
    limits?: definitions["walletLimits"];
    codes?: { [key: string]: definitions["walletCode"] };
    defaultAccountTypeId?: string;
  };
  walletTransactionData: {
    key?: string;
    name?: string;
    value?: string;
  };
  walletTransactionsWalletRequest: {
    /** Format: int64 */
    page?: number;
    /** Format: int64 */
    perPage?: number;
    types?: string[];
    serviceIds?: number[];
    /** Format: int64 */
    from?: string;
    /** Format: int64 */
    to?: string;
  };
  walletTransactionsWalletResponse: {
    /** Format: uint64 */
    total?: string;
    transactions?: definitions["walletTransactionsWalletResponseTransaction"][];
  };
  walletTransactionsWalletResponseTransaction: {
    description?: string;
    /** Format: uint64 */
    amount?: string;
    /** Format: int64 */
    createdAt?: string;
    phoneNumber?: string;
    from?: string;
    to?: string;
    issueTracking?: string;
    type?: definitions["TransactionsWalletResponseTransactionTransactionType"];
    /** Format: uint64 */
    fee?: string;
    /** Format: uint64 */
    balance?: string;
    walletNumber?: string;
    sheba?: string;
    data?: definitions["TransactionsWalletResponseTransactionData"][];
  };
  walletTransferWalletPageInfoResponse: {
    /** Format: uint64 */
    minPerUser?: string;
    /** Format: uint64 */
    maxPerUser?: string;
    /** Format: uint64 */
    fee?: string;
    description?: string;
    confirmText?: string;
    confirmDescription?: string;
  };
  walletTransferWalletSendOtpResponse: {
    phoneNumber?: string;
    /** Format: int64 */
    otpExpireAt?: string;
    /** Format: int64 */
    otpCharacterCount?: string;
  };
  walletTransferWalletVerifyOtpRequest: {
    phoneNumber?: string;
    /** Format: uint64 */
    amount?: string;
    /** Format: uint64 */
    otpCode?: string;
  };
  walletTransferWalletVerifyOtpResponse: {
    wallet?: definitions["walletTransferWalletVerifyOtpResponseWallet"];
    transferId?: string;
    /** Format: uint64 */
    fee?: string;
    /** Format: int64 */
    createdAt?: string;
    srcNumber?: string;
    destinationNumber?: string;
    refId?: string;
    icon?: string;
    reason?: string;
  };
  walletTransferWalletVerifyOtpResponseWallet: {
    phoneNumber?: string;
    nationalCode?: string;
    /** Format: uint64 */
    amount?: string;
    status?: string;
  };
  walletWalletDetail: {
    id?: string;
    serial?: string;
    pan?: string;
    balance?: string;
    expiration?: string;
    description?: string;
    transactions?: definitions["apiwalletTransaction"][];
  };
  walletWithdrawWalletPageInfoResponse: {
    /** Format: uint64 */
    minPerTransaction?: string;
    /** Format: uint64 */
    maxPerTransaction?: string;
    /** Format: uint64 */
    maxPerDay?: string;
    /** Format: uint64 */
    fee?: string;
    description?: string;
    confirmText?: string;
    confirmDescription?: string;
    /** Format: uint64 */
    changeShebaFee?: string;
  };
  walletWithdrawWalletSendOtpResponse: {
    phoneNumber?: string;
    /** Format: int64 */
    otpExpireAt?: string;
    /** Format: int64 */
    otpCharacterCount?: string;
  };
  walletWithdrawWalletVerifyOtpRequest: {
    sheba?: string;
    /** Format: uint64 */
    amount?: string;
    /** Format: uint64 */
    otpCode?: string;
  };
  walletWithdrawWalletVerifyOtpResponse: {
    wallet?: definitions["walletWithdrawWalletVerifyOtpResponseWallet"];
    orderId?: string;
    /** Format: uint64 */
    fee?: string;
    /** Format: int64 */
    createdAt?: string;
    srcNumber?: string;
    destinationNumber?: string;
    refId?: string;
    icon?: string;
    reason?: string;
  };
  walletWithdrawWalletVerifyOtpResponseWallet: {
    phoneNumber?: string;
    nationalCode?: string;
    /** Format: uint64 */
    amount?: string;
    status?: string;
  };
}

export interface operations {
  Admin_CreateError: {
    parameters: {
      body: {
        body: definitions["apiwalletCreateErrorRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["apiwalletErrorCreateResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_GetErrors: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["apiwalletErrorListResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_UpdateError: {
    parameters: {
      body: {
        body: definitions["apiwalletError"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["apiwalletErrorUpdateResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_GetPolicies: {
    parameters: {
      body: {
        body: definitions["walletPolicyGetRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletPolicyResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_GetWallet: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletGetWalletResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_CreateWallet: {
    parameters: {
      body: {
        body: definitions["walletCreateWalletRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletCreateWalletResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_DeleteCard: {
    parameters: {
      path: {
        cardId: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletDeleteCardResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_Cards: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletCardsResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_PinCard: {
    parameters: {
      path: {
        cardId: string;
      };
      body: {
        body: definitions["UserPinCardBody"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletPinCardResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_CreateWalletPageInfo: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletCreateWalletPageInfoResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_DepositWallet: {
    parameters: {
      body: {
        body: definitions["walletDepositWalletRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletDepositWalletResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_DepositWalletPageInfo: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletDepositWalletPageInfoResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_GetWalletPageInfo: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletGetWalletPageInfoResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_CreateGiftWallet: {
    parameters: {
      body: {
        body: definitions["walletCreateGiftWalletRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletCreateGiftWalletResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_CreateGiftRedirect: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletCreateGiftRedirectResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_GetAllGiftCards: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletGetAllGiftWalletsResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_InquiryTransaction: {
    parameters: {
      body: {
        body: definitions["walletInquiryTransactionRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletInquiryTransactionResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_TransactionsWallet: {
    parameters: {
      body: {
        body: definitions["walletTransactionsWalletRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletTransactionsWalletResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_TransferWalletPageInfo: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletTransferWalletPageInfoResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_TransferWalletSendOtp: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletTransferWalletSendOtpResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_TransferWalletVerifyOtp: {
    parameters: {
      body: {
        body: definitions["walletTransferWalletVerifyOtpRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletTransferWalletVerifyOtpResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_CreateWalletVerifyOtp: {
    parameters: {
      body: {
        body: definitions["walletCreateWalletVerifyOtpRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletCreateWalletVerifyOtpResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_WithdrawWalletPageInfo: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletWithdrawWalletPageInfoResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_WithdrawWalletSendOtp: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletWithdrawWalletSendOtpResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_WithdrawWalletVerifyOtp: {
    parameters: {
      body: {
        body: definitions["walletWithdrawWalletVerifyOtpRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletWithdrawWalletVerifyOtpResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  User_DeleteWallet: {
    parameters: {
      path: {
        walletID: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["walletDeleteWalletResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
}

export interface external {}
