/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/admin/refund-requests": {
    get: {
      parameters: {
        query: {
          pageNumber?: number;
          pageSize?: number;
          orderNumber?: string;
          flightNumber?: string;
          tripMode?: components["schemas"]["InternationalFlightPb.TripMode"];
          "departureDatetime.from"?: number;
          "departureDatetime.to"?: number;
          "createdAt.from"?: number;
          "createdAt.to"?: number;
          phone?: string;
          pnr?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.RefundRequestListResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/admin/refund-list": {
    get: {
      parameters: {
        query: {
          pageNumber?: number;
          pageSize?: number;
          orderNumber?: string;
          flightNumber?: string;
          "departureDatetime.from"?: number;
          "departureDatetime.to"?: number;
          "createdAt.from"?: number;
          "createdAt.to"?: number;
          phone?: string;
          pnr?: string;
          flightType?: components["schemas"]["InternationalFlightPb.FlightType"];
          refundReasonId?: string;
          provider?: string;
          agency?: string;
          origin?: string;
          destination?: string;
          refundStatus?: components["schemas"]["InternationalFlightPb.RefundStatus"];
          refundType?: components["schemas"]["InternationalFlightPb.RefundType"];
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.RefundListResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/admin/refund-filters": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.RefundFiltersResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/admin/refund-details": {
    get: {
      parameters: {
        query: {
          requestId?: string;
          refundId?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.RefundDetailsResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/admin/update_refund_status": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.UpdateRefundStatusResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.UpdateRefundStatusRequest"];
        };
      };
    };
  };
  "/v1/admin/orders": {
    get: {
      parameters: {
        query: {
          pageNumber?: number;
          pageSize?: number;
          airlineCode?: string;
          orderNumber?: string;
          pnr?: string;
          flightNumber?: string;
          phoneNumber?: string;
          orderStatus?: components["schemas"]["InternationalFlightPb.OrderStatus"];
          "departureDate.From"?: number;
          "departureDate.To"?: number;
          "reservationDate.From"?: number;
          "reservationDate.To"?: number;
          flightType?: components["schemas"]["InternationalFlightPb.FlightType"];
          providerName?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.GetOrdersResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/admin/orders/{orderId}": {
    get: {
      parameters: {
        path: {
          orderId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.GetOrderResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/Admin/{orderId}/pdf": {
    get: {
      parameters: {
        path: {
          orderId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.GetTicketsPdfResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/admin/refund/set-penalty": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Google.Protobuf.WellKnownTypes.Empty"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.SetRefundInfoRequest"];
        };
      };
    };
  };
  "/v1/admin/orderstatus": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.OrderStatusResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/admin/flight-providers": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.ProviderResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/admin/discount/get-discount-options": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.DiscountOptionsResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/admin/discount/verify-discount": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.VerifyDiscountResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.VerifyDiscountRequest"];
        };
      };
    };
  };
  "/v1/admin/dictionary/invalidate": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Google.Protobuf.WellKnownTypes.Empty"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Google.Protobuf.WellKnownTypes.Empty"];
        };
      };
    };
  };
  "/v1/admin/providers/GetProvidersConfig": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.GetProvidersConfigResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/admin/providers/UpdateProviderConfig": {
    put: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Google.Protobuf.WellKnownTypes.Empty"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.UpdateProviderConfigRequest"];
        };
      };
    };
  };
  "/v1/airports": {
    get: {
      parameters: {
        query: {
          query?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.SearchAirportsResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/airports/popular": {
    get: {
      parameters: {
        query: {
          "iata.code"?: string;
          "iata.type"?: components["schemas"]["InternationalFlightPb.IATA_Types_IATAType"];
          type?: components["schemas"]["InternationalFlightPb.PopularAirportsRequest_Types_PopularAirportsType"];
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.SearchAirportsResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/airports/all-location": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.SearchAirportsResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/availability": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.PrepareAvailabilityResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.PrepareAvailabilityRequest"];
        };
      };
    };
  };
  "/v2/availability/{requestId}": {
    get: {
      parameters: {
        path: {
          requestId: string;
        };
        query: {
          maxBatchSize?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.AvailabilityListResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v3/availability/{requestId}": {
    get: {
      parameters: {
        path: {
          requestId: string;
        };
        query: {
          maxBatchSize?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.AvailabilityListResponseV2"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/availability/{requestId}": {
    get: {
      parameters: {
        path: {
          requestId: string;
        };
        query: {
          maxBatchSize?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.AvailabilityListResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/availability/{requestId}/itineraries/{itineraryId}": {
    get: {
      parameters: {
        path: {
          requestId: string;
          itineraryId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.ItineraryDetailResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/admin/availabilityManagement/Banner": {
    put: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Google.Protobuf.WellKnownTypes.Empty"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.BannerData"];
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Google.Protobuf.WellKnownTypes.Empty"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.BannerData"];
        };
      };
    };
  };
  "/v1/admin/availabilityManagement/Banner/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Google.Protobuf.WellKnownTypes.Empty"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/admin/availabilityManagement/Banners": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.BannerOutputResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/calendar": {
    get: {
      parameters: {
        query: {
          departureIata?: string;
          arrivalIata?: string;
          startDate?: number;
          endDate?: number;
          calendarType?: components["schemas"]["InternationalFlightPb.CalendarType"];
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.CalendarPriceResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/admin/dictionaries/iatas": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.IATAEntryDto"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.IATAEntryDto"];
        };
      };
    };
  };
  "/v1/admin/dictionaries/countries": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.Country"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.Country"];
        };
      };
    };
  };
  "/v1/admin/dictionaries/cities": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.GetCityResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.City"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.City"];
        };
      };
    };
  };
  "/v1/admin/dictionaries/airlines": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.GetAirlinesResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.AirlineEntry"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.AirlineEntry"];
        };
      };
    };
  };
  "/v1/admin/dictionaries/aircrafts": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.AircraftEntry"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.AircraftEntry"];
        };
      };
    };
  };
  "/v1/orders": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.GetOrdersResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.CreateOrderResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.CreateOrderRequest"];
        };
      };
    };
  };
  "/v1/orders/{orderId}/set-passengers": {
    post: {
      parameters: {
        path: {
          orderId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Google.Protobuf.WellKnownTypes.Empty"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.SetPassengersRequest"];
        };
      };
    };
  };
  "/v2/orders/{orderId}/set-passengers": {
    post: {
      parameters: {
        path: {
          orderId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Google.Protobuf.WellKnownTypes.Empty"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.SetPassengersRequestV2"];
        };
      };
    };
  };
  "/v1/orders/{orderId}/set-contact-infos": {
    post: {
      parameters: {
        path: {
          orderId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Google.Protobuf.WellKnownTypes.Empty"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.SetContactInfosRequest"];
        };
      };
    };
  };
  "/v1/orders/{orderId}/book": {
    post: {
      parameters: {
        path: {
          orderId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.BookResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.BookRequest"];
        };
      };
    };
  };
  "/v2/orders/{orderId}/reserve": {
    post: {
      parameters: {
        path: {
          orderId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.BookResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.BookRequest"];
        };
      };
    };
  };
  "/v1/order/{orderId}/discount": {
    post: {
      parameters: {
        path: {
          orderId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.ApplyDiscountResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.ApplyDiscountRequest"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          orderId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.RemoveDiscountResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/order/apply-package/{orderId}": {
    post: {
      parameters: {
        path: {
          orderId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.GetOrderResponseV2"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.ApplyPackageRequest"];
        };
      };
    };
  };
  "/v1/order/remove-package/{orderId}/{serviceId}": {
    delete: {
      parameters: {
        path: {
          orderId: string;
          serviceId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.GetOrderResponseV2"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/orders/{orderId}/invoice": {
    get: {
      parameters: {
        path: {
          orderId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.GetInvoiceResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/orders/{orderId}": {
    get: {
      parameters: {
        path: {
          orderId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.GetOrderResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v2/orders/{orderId}": {
    get: {
      parameters: {
        path: {
          orderId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.GetOrderResponseV2"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/orders/{orderId}/pdf": {
    get: {
      parameters: {
        path: {
          orderId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.GetTicketsPdfResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/refund-requests": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.RefundRequestResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.RefundRequestInput"];
        };
      };
    };
  };
  "/v1/confirm-refund": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.ConfirmRefundResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.ConfirmRefundRequest"];
        };
      };
    };
  };
  "/v1/get-order-for-refund/{orderId}": {
    get: {
      parameters: {
        path: {
          orderId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.GetOrderForRefundResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
  "/v1/timeout/{requestId}": {
    post: {
      parameters: {
        path: {
          requestId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Google.Protobuf.WellKnownTypes.Empty"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InternationalFlightPb.RequestTimeoutRequest"];
        };
      };
    };
  };
  "/v1/test-availability": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InternationalFlightPb.TestAvailabilityResponse"];
          };
        };
        /** Error */
        default: {
          content: {
            "application/json": components["schemas"]["Google.Rpc.Status"];
          };
        };
      };
    };
  };
}

export interface components {
  schemas: {
    "Google.Protobuf.WellKnownTypes.Any": {
      "@type": string;
    } & { [key: string]: unknown };
    "Google.Protobuf.WellKnownTypes.Empty": { [key: string]: unknown };
    "Google.Rpc.Status": {
      /** Format: int32 */
      code?: number;
      message?: string;
      details?: components["schemas"]["Google.Protobuf.WellKnownTypes.Any"][];
    };
    /** @enum {string} */
    "InternationalFlightCore.pb.proto.international_flight.PassengerTypeV2":
      | "UNDEFIENED"
      | "ADULT"
      | "CHILD"
      | "INFANT";
    /** @enum {string} */
    "InternationalFlightPb.AgancyActiveStatus":
      | "DisabledBySystem"
      | "DisabledByUser"
      | "EnabledBySystem"
      | "EnabledByUser";
    "InternationalFlightPb.AgancyData": {
      agancyId?: string;
      name?: string;
      url?: string;
      active?: boolean;
      balance?: string;
      providerName?: string;
      errorMessage?: string;
      status?: components["schemas"]["InternationalFlightPb.AgancyActiveStatus"];
    };
    "InternationalFlightPb.AircraftEntry": {
      aircraft?: components["schemas"]["InternationalFlightPb.Name"];
      code?: string;
    };
    "InternationalFlightPb.AirlineEntry": {
      logoUri?: string;
      name?: components["schemas"]["InternationalFlightPb.Name"];
      code?: string;
    };
    "InternationalFlightPb.Airport": {
      name?: components["schemas"]["InternationalFlightPb.Name"];
    };
    "InternationalFlightPb.ApplyDiscountRequest": {
      orderId?: string;
      discountCode?: string;
    };
    "InternationalFlightPb.ApplyDiscountResponse": {
      applied?: boolean;
      reason?: string;
      discountCode?: string;
      /** Format: int64 */
      payAmount?: number;
    };
    "InternationalFlightPb.ApplyPackageRequest": {
      serviceId?: string;
      orderId?: string;
    };
    "InternationalFlightPb.AvailabilityListResponse": {
      itineraries?: components["schemas"]["InternationalFlightPb.Itinerary"][];
      isFinished?: boolean;
      iataDictionary?: {
        [key: string]: components["schemas"]["InternationalFlightPb.IATAEntry"];
      };
      aircraftDictionary?: {
        [
          key: string
        ]: components["schemas"]["InternationalFlightPb.AircraftEntry"];
      };
      airlineDictionary?: {
        [
          key: string
        ]: components["schemas"]["InternationalFlightPb.AirlineEntry"];
      };
    };
    "InternationalFlightPb.AvailabilityListResponseV2": {
      itineraries?: components["schemas"]["InternationalFlightPb.ItineraryV2"][];
      isFinished?: boolean;
      iataDictionary?: {
        [key: string]: components["schemas"]["InternationalFlightPb.IATAEntry"];
      };
      airlineDictionary?: {
        [
          key: string
        ]: components["schemas"]["InternationalFlightPb.AirlineEntry"];
      };
      banners?: components["schemas"]["InternationalFlightPb.Banner"][];
    };
    "InternationalFlightPb.BaggageDetail": {
      unit?: string;
      /** Format: int32 */
      quantity?: number;
      /** Format: int32 */
      weight?: number;
      description?: string;
      baggageType?: string;
    };
    "InternationalFlightPb.BaggageInfo": {
      passengerType?: components["schemas"]["InternationalFlightPb.PassengerType"];
      unit?: string;
      /** Format: int32 */
      quantity?: number;
      /** Format: int32 */
      weight?: number;
      description?: string;
      baggageDisplayText?: string;
      baggageType?: string;
    };
    "InternationalFlightPb.BaggageInfoV2": {
      passengerType?: components["schemas"]["InternationalFlightPb.PassengerType"];
      baggageDetails?: components["schemas"]["InternationalFlightPb.BaggageDetail"][];
    };
    "InternationalFlightPb.Banner": {
      /** Format: int32 */
      index?: number;
      desktopBannerSrc?: string;
      mobileBannerSrc?: string;
      tabletBannerSrc?: string;
      title?: string;
    };
    "InternationalFlightPb.BannerData": {
      id?: string;
      /** Format: int32 */
      index?: number;
      originIata?: string[];
      destinationIata?: string[];
      title?: string;
      desktopFileUrl?: string;
      mobileFileUrl?: string;
      tabletFileUrl?: string;
      IsActive?: boolean;
    };
    "InternationalFlightPb.BannerOutputResponse": {
      banners?: components["schemas"]["InternationalFlightPb.BannerData"][];
    };
    "InternationalFlightPb.BaseResponse": {
      messages?: string[];
      isSuccess?: boolean;
    };
    "InternationalFlightPb.BookError": {
      reason?: components["schemas"]["InternationalFlightPb.FailedBookReasonType"];
      errorMessage?: string;
    };
    "InternationalFlightPb.BookRequest": {
      orderId?: string;
      acceptPriceChange?: boolean;
    };
    "InternationalFlightPb.BookResponse": {
      /** Format: int64 */
      validUntil?: number;
      success?: boolean;
      error?: components["schemas"]["InternationalFlightPb.BookError"];
      priceChange?: components["schemas"]["InternationalFlightPb.PriceChangeResponse"];
    };
    "InternationalFlightPb.BookingData": {
      /** Format: int64 */
      bookedAt?: number;
      /** Format: int64 */
      bookValidUntil?: number;
      reference?: string;
      booker?: string;
    };
    /** @enum {string} */
    "InternationalFlightPb.CabinType":
      | "CABIN_TYPE_UNDEFINED"
      | "CABIN_TYPE_ECONOMY"
      | "CABIN_TYPE_PREMIUM"
      | "CABIN_TYPE_BUSINESS"
      | "CABIN_TYPE_FIRST";
    "InternationalFlightPb.CabinTypeDetail": {
      cabinType?: components["schemas"]["InternationalFlightPb.CabinTypeV2"];
      cabinTypeTitle?: string;
    };
    /** @enum {string} */
    "InternationalFlightPb.CabinTypeV2":
      | "UNDEFINED"
      | "ECONOMY"
      | "PREMIUM"
      | "BUSINESS"
      | "FIRST_CLASS";
    "InternationalFlightPb.CalendarPriceData": {
      minimumPrice?: string;
      gregorianDepartureDate?: string;
    };
    "InternationalFlightPb.CalendarPriceResponse": {
      calendarData?: components["schemas"]["InternationalFlightPb.CalendarPriceData"][];
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    "InternationalFlightPb.CalendarType": 0 | 1;
    "InternationalFlightPb.City": {
      name?: components["schemas"]["InternationalFlightPb.Name"];
      iata?: string;
    };
    "InternationalFlightPb.ConfirmRefundRequest": {
      orderId?: string;
      itineraryId?: string;
      flightId?: string;
      refundReasonId?: string;
      selectedPassengersForRefund?: string[];
    };
    "InternationalFlightPb.ConfirmRefundResponse": {
      baseResponse?: components["schemas"]["InternationalFlightPb.BaseResponse"];
    };
    "InternationalFlightPb.ContactInfo": {
      phoneNumber?: string;
      email?: string;
      loginPhoneNumber?: string;
    };
    "InternationalFlightPb.Country": {
      name?: components["schemas"]["InternationalFlightPb.Name"];
      code?: string;
    };
    "InternationalFlightPb.CreateOrderRequest": {
      requestId?: string;
      itineraryId?: string;
    };
    "InternationalFlightPb.CreateOrderResponse": {
      orderId?: string;
    };
    "InternationalFlightPb.Discount": {
      code?: string;
      amount?: string;
    };
    "InternationalFlightPb.DiscountOptionItem": {
      id?: string;
      key?: string;
      title?: string;
    };
    "InternationalFlightPb.DiscountOptionsResponse": {
      options?: components["schemas"]["InternationalFlightPb.DiscountOptionItem"][];
    };
    "InternationalFlightPb.Error": {
      /** Format: int32 */
      code?: number;
      message?: string;
    };
    "InternationalFlightPb.ExtraInfo": {
      /** Format: int64 */
      priority?: number;
      isFiltered?: boolean;
      filterReason?: components["schemas"]["InternationalFlightPb.FilterReason"];
      /** Format: double */
      discount?: number;
      /** Format: double */
      commission?: number;
      /** Format: double */
      markup?: number;
    };
    /** @enum {string} */
    "InternationalFlightPb.FailedBookReasonType":
      | "REASON_TYPE_UNDEFINED"
      | "REASON_TYPE_PRICECHANGE"
      | "REASON_TYPE_DUPLICATEREQUEST";
    "InternationalFlightPb.FareBreakdown": {
      /** Format: double */
      baseFare?: number;
      /** Format: double */
      totalTax?: number;
      /** Format: double */
      totalPrice?: number;
      taxDetails?: components["schemas"]["InternationalFlightPb.TaxDetail"][];
      /** Format: double */
      totalRefundableTaxes?: number;
      passengerType?: components["schemas"]["InternationalFlightPb.PassengerType"];
      /** Format: int32 */
      count?: number;
    };
    "InternationalFlightPb.FareBreakdownV2": {
      /** Format: double */
      baseFare?: number;
      /** Format: double */
      totalTax?: number;
      /** Format: double */
      totalPrice?: number;
      taxDetails?: components["schemas"]["InternationalFlightPb.TaxDetail"][];
      /** Format: double */
      totalRefundableTaxes?: number;
      passengerType?: components["schemas"]["InternationalFlightCore.pb.proto.international_flight.PassengerTypeV2"];
      /** Format: int32 */
      count?: number;
    };
    "InternationalFlightPb.FilterReason": {
      description?: string;
      reason?: components["schemas"]["InternationalFlightPb.FilterReason_Types_FilterReasonType"];
    };
    /** @enum {string} */
    "InternationalFlightPb.FilterReason_Types_FilterReasonType":
      | "FILTER_REASON_UNDEFINED"
      | "FILTER_REASON_CONTRADICTION_DATE";
    "InternationalFlightPb.Flight": {
      flightId?: string;
      origin?: components["schemas"]["InternationalFlightPb.FlightEndpoint"];
      destination?: components["schemas"]["InternationalFlightPb.FlightEndpoint"];
      isCharter?: boolean;
      isReserveRequired?: boolean;
      isRefundable?: boolean;
      /** Format: int32 */
      stopCount?: number;
      /** Format: int64 */
      duration?: number;
      priceInfo?: components["schemas"]["InternationalFlightPb.PriceInfo"];
      segments?: components["schemas"]["InternationalFlightPb.FlightSegment"][];
      fareBreakdowns?: components["schemas"]["InternationalFlightPb.FareBreakdown"][];
      cabinType?: components["schemas"]["InternationalFlightPb.CabinType"];
      hasMixedCabinTypes?: boolean;
      flightType?: string;
      baggageInfos?: components["schemas"]["InternationalFlightPb.BaggageInfoV2"][];
    };
    "InternationalFlightPb.FlightBaggageDetail": {
      unit?: string;
      value?: string;
      title?: string;
    };
    "InternationalFlightPb.FlightDateTime": {
      timeFa?: string;
      timeEn?: string;
      dateFa?: string;
      dateEn?: string;
      nextDay?: string;
    };
    "InternationalFlightPb.FlightEndpoint": {
      iata?: string;
      terminal?: string;
      datetime?: string;
      persianDate?: components["schemas"]["InternationalFlightPb.PersianDate"];
    };
    "InternationalFlightPb.FlightEndpointV2": {
      iata?: string;
      terminal?: string;
      flightDateTime?: components["schemas"]["InternationalFlightPb.FlightDateTime"];
    };
    "InternationalFlightPb.FlightOrderStatus": {
      /** Format: int32 */
      Id?: number;
      TitleEn?: string;
      TitleFa?: string;
    };
    "InternationalFlightPb.FlightProviderData": {
      TitleEn?: string;
      TitleFa?: string;
    };
    "InternationalFlightPb.FlightRefund": {
      iata?: string;
      description?: string;
    };
    "InternationalFlightPb.FlightSegment": {
      origin?: components["schemas"]["InternationalFlightPb.FlightEndpoint"];
      destination?: components["schemas"]["InternationalFlightPb.FlightEndpoint"];
      aircraftCode?: string;
      fareClass?: string;
      cabinTypeDisplay?: string;
      cabinType?: components["schemas"]["InternationalFlightPb.CabinType"];
      flightNumber?: string;
      /** Format: int32 */
      stopCount?: number;
      operatingAirlineCode?: string;
      marketingAirlineCode?: string;
      /** Format: int64 */
      duration?: number;
      flightStops?: components["schemas"]["InternationalFlightPb.FlightStop"][];
      baggageInfos?: components["schemas"]["InternationalFlightPb.BaggageInfo"][];
      /** Format: int64 */
      destinationStopDuration?: number;
      segmentId?: string;
      codeShare?: string;
      technicalStop?: string;
      nextDay?: string;
      transferResponsibility?: string;
      baggagePolicy?: string;
    };
    "InternationalFlightPb.FlightSegmentV2": {
      operatingAirlineCode?: string;
      marketingAirlineCode?: string;
      origin?: components["schemas"]["InternationalFlightPb.FlightEndpoint"];
      destination?: components["schemas"]["InternationalFlightPb.FlightEndpoint"];
      airCraftCode?: string;
    };
    "InternationalFlightPb.FlightStop": {
      iata?: string;
      /** Format: int64 */
      duration?: number;
      arrivalAt?: string;
      departureAt?: string;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    "InternationalFlightPb.FlightType": 0 | 1 | 2;
    "InternationalFlightPb.FlightV2": {
      flightId?: string;
      origin?: components["schemas"]["InternationalFlightPb.FlightEndpointV2"];
      destination?: components["schemas"]["InternationalFlightPb.FlightEndpointV2"];
      flightType?: string;
      isReserveRequired?: boolean;
      refundType?: string;
      /** Format: int32 */
      stopCount?: number;
      /** Format: int64 */
      duration?: number;
      segments?: components["schemas"]["InternationalFlightPb.FlightSegmentV2"][];
      stopDetail?: string;
      flightBaggageDetail?: components["schemas"]["InternationalFlightPb.FlightBaggageDetail"];
    };
    "InternationalFlightPb.GetAirlinesResponse": {
      airlines?: components["schemas"]["InternationalFlightPb.AirlineEntry"][];
    };
    "InternationalFlightPb.GetCityResponse": {
      cities?: components["schemas"]["InternationalFlightPb.City"][];
    };
    "InternationalFlightPb.GetInvoiceResponse": {
      invoiceToken?: string;
      /** Format: int32 */
      serviceId?: number;
      /** Format: int64 */
      price?: number;
    };
    "InternationalFlightPb.GetOrderForRefundResponse": {
      refundReasons?: components["schemas"]["InternationalFlightPb.refund_reason"][];
      itineraries?: components["schemas"]["InternationalFlightPb.refund_itinerary"][];
      baseResponse?: components["schemas"]["InternationalFlightPb.BaseResponse"];
    };
    "InternationalFlightPb.GetOrderResponse": {
      order?: components["schemas"]["InternationalFlightPb.Order"];
      iataDictionary?: {
        [key: string]: components["schemas"]["InternationalFlightPb.IATAEntry"];
      };
      aircraftDictionary?: {
        [
          key: string
        ]: components["schemas"]["InternationalFlightPb.AircraftEntry"];
      };
      airlineDictionary?: {
        [
          key: string
        ]: components["schemas"]["InternationalFlightPb.AirlineEntry"];
      };
    };
    "InternationalFlightPb.GetOrderResponseV2": {
      order?: components["schemas"]["InternationalFlightPb.OrderV2"];
      iataDictionary?: {
        [key: string]: components["schemas"]["InternationalFlightPb.IATAEntry"];
      };
      aircraftDictionary?: {
        [
          key: string
        ]: components["schemas"]["InternationalFlightPb.AircraftEntry"];
      };
      airlineDictionary?: {
        [
          key: string
        ]: components["schemas"]["InternationalFlightPb.AirlineEntry"];
      };
    };
    "InternationalFlightPb.GetOrdersResponse": {
      orders?: components["schemas"]["InternationalFlightPb.Order"][];
      iataDictionary?: {
        [key: string]: components["schemas"]["InternationalFlightPb.IATAEntry"];
      };
      aircraftDictionary?: {
        [
          key: string
        ]: components["schemas"]["InternationalFlightPb.AircraftEntry"];
      };
      airlineDictionary?: {
        [
          key: string
        ]: components["schemas"]["InternationalFlightPb.AirlineEntry"];
      };
      /** Format: int32 */
      pageCount?: number;
    };
    "InternationalFlightPb.GetProvidersConfigResponse": {
      agancies?: components["schemas"]["InternationalFlightPb.AgancyData"][];
    };
    "InternationalFlightPb.GetTicketsPdfResponse": {
      url?: string;
      error?: components["schemas"]["InternationalFlightPb.Error"];
    };
    "InternationalFlightPb.IATA": {
      code?: string;
      type?: components["schemas"]["InternationalFlightPb.IATA_Types_IATAType"];
    };
    "InternationalFlightPb.IATAEntry": {
      name?: components["schemas"]["InternationalFlightPb.Name"];
      city?: components["schemas"]["InternationalFlightPb.City"];
      country?: components["schemas"]["InternationalFlightPb.Country"];
      code?: string;
    };
    "InternationalFlightPb.IATAEntryDto": {
      name?: components["schemas"]["InternationalFlightPb.Name"];
      cityCode?: string;
      countryCode2l?: string;
      /** Format: double */
      Score?: number;
      iata?: string;
      isAirport?: boolean;
    };
    /** @enum {string} */
    "InternationalFlightPb.IATA_Types_IATAType":
      | "IATA_TYPE_AIRPORT"
      | "IATA_TYPE_CITY";
    "InternationalFlightPb.Itinerary": {
      itineraryId?: string;
      currency?: string;
      priceInfo?: components["schemas"]["InternationalFlightPb.PriceInfo"];
      hideAvailableSeats?: boolean;
      /** Format: int32 */
      availableSeat?: number;
      fareBreakdowns?: components["schemas"]["InternationalFlightPb.FareBreakdown"][];
      refundPolicies?: components["schemas"]["InternationalFlightPb.Policy"][];
      visaPolicies?: components["schemas"]["InternationalFlightPb.Policy"][];
      tripMode?: components["schemas"]["InternationalFlightPb.TripMode"];
      leavingFlight?: components["schemas"]["InternationalFlightPb.Flight"];
      returningFlight?: components["schemas"]["InternationalFlightPb.Flight"];
      extraInfo?: components["schemas"]["InternationalFlightPb.ExtraInfo"];
      IsCodeShare?: boolean;
    };
    "InternationalFlightPb.ItineraryDetailResponse": {
      itinerary?: components["schemas"]["InternationalFlightPb.Itinerary"];
      iataDictionary?: {
        [key: string]: components["schemas"]["InternationalFlightPb.IATAEntry"];
      };
      aircraftDictionary?: {
        [
          key: string
        ]: components["schemas"]["InternationalFlightPb.AircraftEntry"];
      };
      airlineDictionary?: {
        [
          key: string
        ]: components["schemas"]["InternationalFlightPb.AirlineEntry"];
      };
    };
    "InternationalFlightPb.ItineraryV2": {
      itineraryId?: string;
      currency?: string;
      /** Format: int32 */
      availableSeat?: number;
      priceInfo?: components["schemas"]["InternationalFlightPb.PriceInfoV2"];
      leavingFlight?: components["schemas"]["InternationalFlightPb.FlightV2"];
      returningFlight?: components["schemas"]["InternationalFlightPb.FlightV2"];
      IsCodeShare?: boolean;
      cabinType?: components["schemas"]["InternationalFlightPb.CabinTypeDetail"];
      tripMode?: components["schemas"]["InternationalFlightPb.TripMode"];
      flightType?: string;
      isCharter?: boolean;
      fareBreakdowns?: components["schemas"]["InternationalFlightPb.FareBreakdownV2"][];
      providerName?: string;
    };
    "InternationalFlightPb.Name": {
      persian?: string;
      english?: string;
    };
    "InternationalFlightPb.Order": {
      orderId?: string;
      orderNumber?: string;
      /** Format: int64 */
      createdAt?: number;
      userId?: string;
      contactInfos?: components["schemas"]["InternationalFlightPb.ContactInfo"][];
      passengers?: components["schemas"]["InternationalFlightPb.Passenger"][];
      itinerary?: components["schemas"]["InternationalFlightPb.Itinerary"];
      tickets?: components["schemas"]["InternationalFlightPb.Ticket"][];
      bookingData?: components["schemas"]["InternationalFlightPb.BookingData"];
      paymentInfo?: components["schemas"]["InternationalFlightPb.PaymentInfo"];
      status?: components["schemas"]["InternationalFlightPb.OrderStatusHistoryItem"];
      statusHistory?: components["schemas"]["InternationalFlightPb.OrderStatusHistoryItem"][];
      priceInfo?: components["schemas"]["InternationalFlightPb.PriceInfo"];
      providerName?: string;
      discount?: components["schemas"]["InternationalFlightPb.Discount"];
      Services?: components["schemas"]["InternationalFlightPb.ServiceOrderDetail"][];
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    "InternationalFlightPb.OrderStatus":
      | 0
      | 1
      | 2
      | 3
      | 4
      | 5
      | 6
      | 7
      | 8
      | 9
      | 10;
    "InternationalFlightPb.OrderStatusHistoryItem": {
      status?: components["schemas"]["InternationalFlightPb.OrderStatus"];
      /** Format: int64 */
      at?: number;
      reason?: components["schemas"]["InternationalFlightPb.OrderStatusHistoryItem_Types_OrderChangeReason"];
      description?: string;
    };
    /** @enum {string} */
    "InternationalFlightPb.OrderStatusHistoryItem_Types_OrderChangeReason": "ORDER_CHANGE_REASON_UNDEFINED";
    "InternationalFlightPb.OrderStatusResponse": {
      Data?: components["schemas"]["InternationalFlightPb.FlightOrderStatus"][];
    };
    "InternationalFlightPb.OrderV2": {
      orderId?: string;
      orderNumber?: string;
      /** Format: int64 */
      createdAt?: number;
      userId?: string;
      contactInfos?: components["schemas"]["InternationalFlightPb.ContactInfo"][];
      passengers?: components["schemas"]["InternationalFlightPb.PassengerV2"][];
      itinerary?: components["schemas"]["InternationalFlightPb.ItineraryV2"];
      priceInfo?: components["schemas"]["InternationalFlightPb.PriceInfo"];
      providerName?: string;
      discount?: components["schemas"]["InternationalFlightPb.Discount"];
      status?: components["schemas"]["InternationalFlightPb.OrderStatus"];
      services?: components["schemas"]["InternationalFlightPb.Service"][];
    };
    /** @enum {string} */
    "InternationalFlightPb.PageTypeEntity":
      | "Search"
      | "AddPassenger"
      | "Checkout";
    "InternationalFlightPb.Passenger": {
      passengerId?: string;
      passengerType?: components["schemas"]["InternationalFlightPb.PassengerType"];
      gender?: components["schemas"]["InternationalFlightPb.Passenger_Types_Gender"];
      firstName?: components["schemas"]["InternationalFlightPb.Name"];
      lastName?: components["schemas"]["InternationalFlightPb.Name"];
      birthDate?: string;
      contactInfo?: components["schemas"]["InternationalFlightPb.ContactInfo"];
      nationality?: string;
      nationalCode?: string;
      passport?: components["schemas"]["InternationalFlightPb.Passport"];
      nationalityAlpha3?: string;
    };
    "InternationalFlightPb.PassengerCriteria": {
      /** Format: int32 */
      adult?: number;
      /** Format: int32 */
      child?: number;
      /** Format: int32 */
      infant?: number;
    };
    "InternationalFlightPb.PassengerStatus": {
      availableForRefund?: boolean;
      reason?: string;
      color?: string;
    };
    /** @enum {string} */
    "InternationalFlightPb.PassengerType":
      | "PASSENGER_TYPE_UNDEFINED"
      | "PASSENGER_TYPE_ADULT"
      | "PASSENGER_TYPE_CHILD"
      | "PASSENGER_TYPE_INFANT";
    "InternationalFlightPb.PassengerV2": {
      passengerId?: string;
      passengerType?: components["schemas"]["InternationalFlightCore.pb.proto.international_flight.PassengerTypeV2"];
      gender?: components["schemas"]["InternationalFlightPb.PassengerV2_Types_Gender"];
      firstName?: components["schemas"]["InternationalFlightPb.Name"];
      lastName?: components["schemas"]["InternationalFlightPb.Name"];
      birthDate?: string;
      contactInfo?: components["schemas"]["InternationalFlightPb.ContactInfo"];
      nationality?: string;
      nationalCode?: string;
      passport?: components["schemas"]["InternationalFlightPb.Passport"];
      nationalityAlpha3?: string;
    };
    /** @enum {string} */
    "InternationalFlightPb.PassengerV2_Types_Gender":
      | "GENDER_UNDEFINED"
      | "GENDER_MALE"
      | "GENDER_FEMALE"
      | "GENDER_UNDISCLOSED";
    /** @enum {string} */
    "InternationalFlightPb.Passenger_Types_Gender":
      | "GENDER_UNDEFINED"
      | "GENDER_MALE"
      | "GENDER_FEMALE"
      | "GENDER_UNDISCLOSED";
    "InternationalFlightPb.Passport": {
      number?: string;
      expireDate?: string;
      issueCountryCode?: string;
      countryCodeAlpha2?: string;
      countryCodeAlpha3?: string;
    };
    "InternationalFlightPb.PaymentInfo": {
      /** Format: int64 */
      price?: number;
      rrn?: string;
      /** Format: int64 */
      payedAt?: number;
      gatewayName?: string;
      mask?: string;
    };
    "InternationalFlightPb.PersianDate": {
      dateTimeString?: string;
      datePersian?: string;
      dateGregorian?: string;
      datePersianFull?: string;
      dateGregorianFull?: string;
      datePersianFull2?: string;
    };
    "InternationalFlightPb.Policy": {
      title?: string;
      description?: string;
      isHtml?: boolean;
      descriptions?: string[];
      direction?: string;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    "InternationalFlightPb.PopularAirportsRequest_Types_PopularAirportsType":
      | 0
      | 1
      | 2;
    "InternationalFlightPb.PrepareAvailabilityRequest": {
      cabinCriteria?: components["schemas"]["InternationalFlightPb.PrepareAvailabilityRequest_Types_CabinCriteria"];
      origin?: components["schemas"]["InternationalFlightPb.IATA"];
      destination?: components["schemas"]["InternationalFlightPb.IATA"];
      passengerCriteria?: components["schemas"]["InternationalFlightPb.PassengerCriteria"];
      tripMode?: components["schemas"]["InternationalFlightPb.TripMode"];
      departureDate?: string;
      returnDate?: string;
    };
    "InternationalFlightPb.PrepareAvailabilityRequest_Types_CabinCriteria": {
      cabinType?: components["schemas"]["InternationalFlightPb.CabinType"];
    };
    "InternationalFlightPb.PrepareAvailabilityResponse": {
      requestId?: string;
      /** Format: int64 */
      validUntil?: number;
      pollingOptions?: components["schemas"]["InternationalFlightPb.PrepareAvailabilityResponse_Types_PollingOptions"];
      loadingMessage?: string;
    };
    "InternationalFlightPb.PrepareAvailabilityResponse_Types_PollingOptions": {
      /** Format: int32 */
      maxPolls?: number;
      /** Format: int64 */
      interval?: number;
    };
    "InternationalFlightPb.PriceChangeResponse": {
      oldPrice?: string;
      newPrice?: string;
      message?: string;
    };
    "InternationalFlightPb.PriceInfo": {
      /** Format: double */
      baseFare?: number;
      /** Format: double */
      tax?: number;
      /** Format: double */
      price?: number;
      /** Format: double */
      refundableTax?: number;
      /** Format: double */
      extraServicesPrice?: number;
    };
    "InternationalFlightPb.PriceInfoV2": {
      /** Format: double */
      baseFare?: number;
      /** Format: double */
      tax?: number;
      /** Format: double */
      price?: number;
      /** Format: double */
      discountPrice?: number;
      /** Format: double */
      refundableTax?: number;
      /** Format: double */
      commission?: number;
    };
    "InternationalFlightPb.ProviderResponse": {
      Data?: components["schemas"]["InternationalFlightPb.FlightProviderData"][];
    };
    "InternationalFlightPb.RefundDetailsResponse": {
      passengersCount?: string;
      pnr?: string;
      orderNumber?: string;
      rrn?: string;
      ticketType?: components["schemas"]["InternationalFlightPb.TicketType"];
      tripMode?: components["schemas"]["InternationalFlightPb.TripMode"];
      originDestination?: string;
      refundStatusList?: components["schemas"]["InternationalFlightPb.RefundStatus"][];
      passengers?: components["schemas"]["InternationalFlightPb.refund_details_passenger"][];
      baseResponse?: components["schemas"]["InternationalFlightPb.BaseResponse"];
    };
    "InternationalFlightPb.RefundFiltersResponse": {
      refundReasons?: components["schemas"]["InternationalFlightPb.refund_reason"][];
      providers?: string[];
      agencies?: string[];
    };
    "InternationalFlightPb.RefundInfo": {
      /** Format: double */
      refundedAmount?: number;
      /** Format: double */
      refundPenalty?: number;
      /** Format: int64 */
      refundedAt?: number;
      refundStatus?: components["schemas"]["InternationalFlightPb.RefundStatus"];
    };
    "InternationalFlightPb.RefundListItem": {
      requestId?: string;
      refundId?: string;
      orderId?: string;
      orderNumber?: string;
      refundStatus?: components["schemas"]["InternationalFlightPb.RefundStatus"];
      createdAt?: string;
      originDestination?: string;
      departureDatetime?: string;
      provider?: string;
      referenceNumber?: string;
      agency?: string;
      refundType?: string;
      flightType?: string;
      refundReason?: string;
    };
    "InternationalFlightPb.RefundListResponse": {
      refundRequestList?: components["schemas"]["InternationalFlightPb.RefundListItem"][];
      /** Format: int32 */
      pageCount?: number;
    };
    "InternationalFlightPb.RefundRequestInput": {
      orderId?: string;
    };
    "InternationalFlightPb.RefundRequestListItem": {
      orderNumber?: string;
      /** Format: double */
      penaltyAmount?: number;
      /** Format: double */
      ticketPrice?: number;
      refundStatus?: components["schemas"]["InternationalFlightPb.RefundStatus"];
      createdAt?: string;
      originDestination?: string;
      flightNumber?: string;
      departureDatetime?: string;
      provider?: string;
      referenceNumber?: string;
      airline?: string;
      agency?: string;
      refundReason?: string;
      flightType?: string;
      phone?: string;
      firstName?: string;
      lastName?: string;
      ticketNumber?: string;
      /** Format: double */
      companyPenalty?: number;
      /** Format: double */
      refundAmount?: number;
    };
    "InternationalFlightPb.RefundRequestListResponse": {
      refundRequestList?: components["schemas"]["InternationalFlightPb.RefundRequestListItem"][];
      /** Format: int32 */
      pageCount?: number;
    };
    "InternationalFlightPb.RefundRequestResponse": {
      refundRequestId?: string;
      message?: string;
    };
    /** @enum {string} */
    "InternationalFlightPb.RefundStatus":
      | "REFUND_STATUS_UNDEFINED"
      | "REFUND_STATUS_PENDING"
      | "REFUND_STATUS_RECEIVED"
      | "REFUND_STATUS_REFUNDED"
      | "REFUND_STATUS_REJECTED"
      | "REFUND_STATUS_DUPLICATE_REQUEST"
      | "REFUND_STATUS_CALCULATED"
      | "REFUND_STATUS_CANCEL_REQUEST"
      | "REFUND_STATUS_ACCEPT_REQUEST";
    /**
     * Format: int32
     * @enum {integer}
     */
    "InternationalFlightPb.RefundType": 0 | 1 | 2;
    "InternationalFlightPb.RemoveDiscountResponse": {
      removed?: boolean;
      reason?: string;
      /** Format: int64 */
      payAmount?: number;
    };
    "InternationalFlightPb.RequestTimeoutRequest": {
      requestId?: string;
      pageType?: components["schemas"]["InternationalFlightPb.PageTypeEntity"];
    };
    "InternationalFlightPb.SearchAirportsResponse": {
      results?: components["schemas"]["InternationalFlightPb.SearchAirportsResponse_Types_AirportSearchResult"][];
    };
    "InternationalFlightPb.SearchAirportsResponse_Types_AirportSearchResult": {
      iata?: components["schemas"]["InternationalFlightPb.IATA"];
      country?: components["schemas"]["InternationalFlightPb.Country"];
      city?: components["schemas"]["InternationalFlightPb.City"];
      airport?: components["schemas"]["InternationalFlightPb.Airport"];
    };
    "InternationalFlightPb.Service": {
      title?: string;
      serviceDetail?: components["schemas"]["InternationalFlightPb.Service_Detail"][];
      descriptions?: components["schemas"]["InternationalFlightPb.Service_Description"];
      selectType?: string;
      passengerPriceComment?: string;
    };
    /** @enum {string} */
    "InternationalFlightPb.ServiceDetailType": "None" | "ZeroRefund";
    "InternationalFlightPb.ServiceOrderDetail": {
      title?: string;
      price?: string;
      priceComment?: string;
      type?: components["schemas"]["InternationalFlightPb.ServiceDetailType"];
    };
    "InternationalFlightPb.Service_Description": {
      title?: string;
      text?: string[];
    };
    "InternationalFlightPb.Service_Detail": {
      Id?: string;
      title?: string;
      description?: string;
      discountable?: boolean;
      /** Format: double */
      price?: number;
      priceComment?: string;
      selected?: boolean;
      /** Format: int32 */
      Priority?: number;
    };
    "InternationalFlightPb.SetContactInfosRequest": {
      orderId?: string;
      contactInfos?: components["schemas"]["InternationalFlightPb.ContactInfo"][];
    };
    "InternationalFlightPb.SetPassengersRequest": {
      orderId?: string;
      passengers?: components["schemas"]["InternationalFlightPb.Passenger"][];
    };
    "InternationalFlightPb.SetPassengersRequestV2": {
      orderId?: string;
      passengerIds?: string[];
    };
    "InternationalFlightPb.SetRefundInfoRequest": {
      orderId?: string;
      ticketId?: string;
      /** Format: double */
      providerRefundPenalty?: number;
      /** Format: double */
      commissionRefundPenalty?: number;
    };
    "InternationalFlightPb.TaxDetail": {
      /** Format: double */
      amount?: number;
      taxCode?: string;
      taxName?: string;
      isRefundable?: boolean;
    };
    "InternationalFlightPb.TestAvailabilityResponse": {
      origin?: string;
      destination?: string;
      departureDate?: string;
      /** Format: int32 */
      adultCount?: number;
      /** Format: int32 */
      childCount?: number;
      /** Format: int32 */
      infantCount?: number;
      /** Format: int32 */
      resultCount?: number;
      requestId?: string;
    };
    "InternationalFlightPb.Ticket": {
      ticketId?: string;
      ticketNumber?: string;
      flightId?: string;
      segmentId?: string;
      passengerId?: string;
      refundInfo?: components["schemas"]["InternationalFlightPb.RefundInfo"];
      status?: components["schemas"]["InternationalFlightPb.TicketStatus"];
      priceInfo?: components["schemas"]["InternationalFlightPb.PriceInfo"];
      type?: components["schemas"]["InternationalFlightPb.TicketType"];
    };
    /** @enum {string} */
    "InternationalFlightPb.TicketStatus":
      | "TICKET_STATUS_UNDEFINED"
      | "TICKET_STATUS_ISSUED"
      | "TICKET_STATUS_REFUNDED_REQUEST_RECEIVED"
      | "TICKET_STATUS_REFUNDED"
      | "TICKET_STATUS_REFUNDED_REJECTED";
    /** @enum {string} */
    "InternationalFlightPb.TicketType":
      | "TICKET_TYPE_LEAVE"
      | "TICKET_TYPE_RETURN";
    /**
     * Format: int32
     * @enum {integer}
     */
    "InternationalFlightPb.TripMode": 0 | 1 | 2;
    "InternationalFlightPb.UpdateProviderConfigRequest": {
      agancies?: components["schemas"]["InternationalFlightPb.UpdatedAgancyData"][];
    };
    "InternationalFlightPb.UpdateRefundStatusRequest": {
      requestId?: string;
      refundId?: string;
      refundStatus?: components["schemas"]["InternationalFlightPb.RefundStatus"];
    };
    "InternationalFlightPb.UpdateRefundStatusResponse": {
      baseResponse?: components["schemas"]["InternationalFlightPb.BaseResponse"];
    };
    "InternationalFlightPb.UpdatedAgancyData": {
      agancyId?: string;
      url?: string;
      active?: boolean;
      providerName?: string;
    };
    "InternationalFlightPb.VerifyDiscountRequest": {
      option?: string;
      airline?: string;
      origin?: string;
      destination?: string;
    };
    "InternationalFlightPb.VerifyDiscountResponse": {
      baseResponse?: components["schemas"]["InternationalFlightPb.BaseResponse"];
    };
    "InternationalFlightPb.airline": {
      code?: string;
      name?: string;
    };
    "InternationalFlightPb.refund_details_passenger": {
      firstName?: string;
      lastName?: string;
      ticketNumber?: string;
      /** Format: double */
      ticketPrice?: number;
    };
    "InternationalFlightPb.refund_itinerary": {
      itineraryId?: string;
      flightId?: string;
      flightNumber?: string;
      airline?: components["schemas"]["InternationalFlightPb.airline"];
      pnr?: string;
      flightDateTime?: string;
      origin?: components["schemas"]["InternationalFlightPb.FlightRefund"];
      destination?: components["schemas"]["InternationalFlightPb.FlightRefund"];
      ticketType?: components["schemas"]["InternationalFlightPb.TicketType"];
      passengers?: components["schemas"]["InternationalFlightPb.refund_passenger"][];
    };
    "InternationalFlightPb.refund_passenger": {
      id?: string;
      firstName?: components["schemas"]["InternationalFlightPb.Name"];
      lastName?: components["schemas"]["InternationalFlightPb.Name"];
      passengerStatus?: components["schemas"]["InternationalFlightPb.PassengerStatus"];
    };
    "InternationalFlightPb.refund_reason": {
      id?: string;
      title?: string;
    };
  };
}

export interface operations {}

export interface external {}
