/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/ticket": {
    get: operations["TicketIssue_AdminGetTicketPdf"];
  };
  "/v1/ticket/{id}": {
    get: operations["TicketIssue_GetTicketPdf"];
  };
}

export interface definitions {
  /**
   * @default AGE_TYPE_UNDEFINED
   * @enum {string}
   */
  apiticketpdfAgeType:
    | "AGE_TYPE_UNDEFINED"
    | "AGE_TYPE_ADULT"
    | "AGE_TYPE_CHILD"
    | "AGE_TYPE_INFANT";
  apiticketpdfAirline: {
    code?: string;
    name?: string;
  };
  apiticketpdfAirport: {
    country?: definitions["apiticketpdfCountry"];
    city?: definitions["apiticketpdfCity"];
    name?: definitions["apiticketpdfName"];
    iata?: string;
  };
  apiticketpdfBaggage: {
    code?: string;
    name?: definitions["apiticketpdfName"];
    /** Format: int32 */
    count?: number;
    /** Format: int32 */
    weight?: number;
  };
  apiticketpdfCity: {
    name?: definitions["apiticketpdfName"];
    iata?: string;
  };
  apiticketpdfCountry: {
    twoLetterCode?: string;
    code?: string;
    name?: definitions["apiticketpdfName"];
  };
  /**
   * @default UNDEFINED
   * @enum {string}
   */
  apiticketpdfFlightClass: "UNDEFINED" | "ECONOMY" | "BUSINESS" | "PREMIUM";
  apiticketpdfFlightEndpoint: {
    /** Format: int64 */
    date?: string;
    terminal?: string;
    airport?: definitions["apiticketpdfAirport"];
  };
  apiticketpdfFlightInfo: {
    isCharter?: boolean;
    airline?: definitions["apiticketpdfAirline"];
    flightClass?: definitions["apiticketpdfFlightClass"];
    departure?: definitions["apiticketpdfFlightEndpoint"];
    arrival?: definitions["apiticketpdfFlightEndpoint"];
    flightID?: string;
    airplaneModel?: string;
    flightNumber?: string;
    fareClass?: string;
    options?: string[];
    allowedBaggage?: definitions["apiticketpdfBaggage"][];
    refundPolicies?: definitions["apiticketpdfRefundPolicyItem"][];
  };
  /**
   * @default GENDER_TYPE_UNDEFINED
   * @enum {string}
   */
  apiticketpdfGenderType:
    | "GENDER_TYPE_UNDEFINED"
    | "GENDER_TYPE_FEMALE"
    | "GENDER_TYPE_MALE"
    | "Gender_TYPE_RATHER_NOT_SAY";
  apiticketpdfLeg: {
    FlightInfo?: definitions["apiticketpdfFlightInfo"];
    Passengers?: definitions["apiticketpdfPassenger"][];
    Tickets?: definitions["apiticketpdfTicket"][];
  };
  apiticketpdfName: {
    farsi?: string;
    english?: string;
  };
  /**
   * enum PaymentType {
   *   PAYMENT_TYPE__ = 0 ;
   *   PAYMENT_TYPE_CARD = 1;
   *   PAYMENT_TYPE_WALLET = 2;
   * }
   */
  apiticketpdfOrderPassenger: {
    passenger?: definitions["apiticketpdfPassenger"];
    tickets?: definitions["apiticketpdfTicket"][];
  };
  apiticketpdfOrderPayment: {
    /** Format: uint64 */
    price?: string;
    /** Format: uint64 */
    tax?: string;
    /** Format: uint64 */
    totalPrice?: string;
    /** Format: uint64 */
    discount?: string;
    rrn?: string;
    /** Format: int64 */
    paymentTime?: string;
    /** PaymentType payment_type = 7; */
    mask?: string;
    status?: definitions["apiticketpdfPaymentStatus"];
  };
  /**
   * @default ORDERSTATUS_UNDEFINED
   * @enum {string}
   */
  apiticketpdfOrderStatus:
    | "ORDERSTATUS_UNDEFINED"
    | "ORDERSTATUS_ORDER_CREATED"
    | "ORDERSTATUS_ORDER_RESERVED"
    | "ORDERSTATUS_CHECKED_OUT"
    | "ORDERSTATUS_PAYMENT_FAILED"
    | "ORDERSTATUS_PAYMENT_SUCCESS"
    | "ORDERSTATUS_BUY_FAILED"
    | "ORDERSTATUS_BUY_PENDING"
    | "ORDERSTATUS_BUY_CONFIRMED"
    | "ORDERSTATUS_CANCELED"
    | "ORDERSTATUS_PARTIALLY_BOUGHT";
  apiticketpdfPassenger: {
    passengerID?: string;
    nationalCode?: string;
    nationality?: string;
    birthDate?: string;
    lastname?: definitions["apiticketpdfName"];
    firstname?: definitions["apiticketpdfName"];
    passport?: definitions["apiticketpdfPassport"];
    gender?: definitions["apiticketpdfGenderType"];
    passengerType?: definitions["apiticketpdfPassengerType"];
    ageType?: definitions["apiticketpdfAgeType"];
  };
  /**
   * @default PASSENGER_TYPE_UNDEFINED
   * @enum {string}
   */
  apiticketpdfPassengerType:
    | "PASSENGER_TYPE_UNDEFINED"
    | "PASSENGER_TYPE_NATIONAL_CARD"
    | "PASSENGER_TYPE_PASSPORT"
    | "PASSENGER_TYPE_BOTH";
  apiticketpdfPassport: {
    country?: string;
    expireDate?: string;
    issueDate?: string;
    number?: string;
  };
  /**
   * @default PAYMENT_STATUS_UNDEFINED
   * @enum {string}
   */
  apiticketpdfPaymentStatus:
    | "PAYMENT_STATUS_UNDEFINED"
    | "PAYMENT_STATUS_CREATED"
    | "PAYMENT_STATUS_CANCELED"
    | "PAYMENT_STATUS_REJECTED"
    | "PAYMENT_STATUS_SUCCESSFUL";
  apiticketpdfRefundPolicyItem: {
    Text?: string;
    /** Format: float */
    Percent?: number;
  };
  /**
   * @default REFUNDREASON_UNDEFINED
   * @enum {string}
   */
  apiticketpdfRefundReason:
    | "REFUNDREASON_UNDEFINED"
    | "REFUNDREASON_FLIGHT_CANCELED"
    | "REFUNDREASON_BY_CRCN"
    | "REFUNDREASON_FLIGHT_DELAYED";
  apiticketpdfTicket: {
    payment?: definitions["apiticketpdfTicketPayment"];
    status?: definitions["apiticketpdfTicketStatus"];
    ticketId?: string;
    pnr?: string;
    ticketNumber?: string;
    /** Format: int64 */
    issueDate?: string;
    orderNumber?: string;
    flightInfo?: definitions["apiticketpdfFlightInfo"];
    /** Format: uint64 */
    refundAmount?: string;
    /** Format: uint64 */
    refundPenalty?: string;
    refundReason?: definitions["apiticketpdfRefundReason"];
  };
  apiticketpdfTicketPayment: {
    /** Format: uint64 */
    price?: string;
    /** Format: uint64 */
    tax?: string;
    /** Format: uint64 */
    totalPrice?: string;
  };
  /**
   * @default TICKETSTATUS_UNDEFINED
   * @enum {string}
   */
  apiticketpdfTicketStatus:
    | "TICKETSTATUS_UNDEFINED"
    | "TICKETSTATUS_ISSUED"
    | "TICKETSTATUS_REFUND_REQUESTED"
    | "TICKETSTATUS_REFUND_PROCESSING"
    | "TICKETSTATUS_REFUND_CONFIRMED"
    | "TICKETSTATUS_REFUND_REJECTED"
    | "TICKETSTATUS_REFUND_DONE"
    | "TICKETSTATUS_REFUND_FAILED";
  protobufAny: {
    "@type"?: string;
  } & { [key: string]: unknown };
  rpcStatus: {
    /** Format: int32 */
    code?: number;
    message?: string;
    details?: definitions["protobufAny"][];
  };
  ticketpdfTicketUrl: {
    url?: string;
  };
}

export interface operations {
  TicketIssue_AdminGetTicketPdf: {
    parameters: {
      query: {
        orderId?: string;
        orderNumber?: string;
        expireDate?: string;
        createdDate?: string;
        userId?: string;
        userPhone?: string;
        userEmail?: string;
        status?:
          | "ORDERSTATUS_UNDEFINED"
          | "ORDERSTATUS_ORDER_CREATED"
          | "ORDERSTATUS_ORDER_RESERVED"
          | "ORDERSTATUS_CHECKED_OUT"
          | "ORDERSTATUS_PAYMENT_FAILED"
          | "ORDERSTATUS_PAYMENT_SUCCESS"
          | "ORDERSTATUS_BUY_FAILED"
          | "ORDERSTATUS_BUY_PENDING"
          | "ORDERSTATUS_BUY_CONFIRMED"
          | "ORDERSTATUS_CANCELED"
          | "ORDERSTATUS_PARTIALLY_BOUGHT";
        "payment.price"?: string;
        "payment.tax"?: string;
        "payment.totalPrice"?: string;
        "payment.discount"?: string;
        "payment.rrn"?: string;
        "payment.paymentTime"?: string;
        /** PaymentType payment_type = 7; */
        "payment.mask"?: string;
        "payment.status"?:
          | "PAYMENT_STATUS_UNDEFINED"
          | "PAYMENT_STATUS_CREATED"
          | "PAYMENT_STATUS_CANCELED"
          | "PAYMENT_STATUS_REJECTED"
          | "PAYMENT_STATUS_SUCCESSFUL";
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["ticketpdfTicketUrl"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  TicketIssue_GetTicketPdf: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["ticketpdfTicketUrl"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
}

export interface external {}
