/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/admin/company_groups": {
    get: operations["Admin_getCompanyGroups"];
  };
  "/v1/admin/credits": {
    get: operations["Admin_GetCredits"];
  };
  "/v1/admin/frequentCities": {
    post: operations["Admin_CreateFrequentCity"];
  };
  "/v1/admin/frequentCities/{city}": {
    delete: operations["Admin_DeleteFrequentCity"];
  };
  "/v1/admin/order/{orderId}": {
    patch: operations["Admin_UpdateRefundStatus"];
  };
  "/v1/admin/order/{orderId}/bus/refundreasons": {
    get: operations["Admin_AdminRefundReasons"];
  };
  "/v1/admin/order/{orderId}/calculateRefund": {
    get: operations["Admin_AdminCalculateRefund"];
  };
  "/v1/admin/order/{orderId}/refund": {
    post: operations["Admin_AdminRefund"];
  };
  "/v1/admin/order_status": {
    get: operations["Admin_AdminGetOrderStatus"];
  };
  "/v1/admin/orders/filter": {
    post: operations["Admin_AdminFilterOrder"];
  };
  "/v1/admin/orders/{orderId}/detail": {
    get: operations["Admin_AdminOrderDetails"];
  };
  "/v1/admin/orders/{orderId}/pdf": {
    get: operations["Admin_GetTicketPDF"];
  };
  "/v1/admin/refund_requests": {
    post: operations["Admin_AdminRRList"];
  };
  "/v1/admin/refund_requests/{orderId}/actions": {
    get: operations["Admin_AdminRRGetActions"];
  };
  "/v1/admin/refund_requests/{orderId}/comments": {
    get: operations["Admin_GetRRComments"];
    post: operations["Admin_NewComment"];
  };
  "/v1/admin/refund_requests/{orderId}/do": {
    post: operations["Admin_AdminRRSendAction"];
  };
  "/v1/admin/refund_status": {
    get: operations["Admin_AdminGetRRStatus"];
  };
  "/v1/alert": {
    get: operations["Bus_GetAlert"];
    post: operations["Bus_CreateAlert"];
    patch: operations["Bus_UpdateAlert"];
  };
  "/v1/buslist": {
    get: operations["Bus_GetBusList"];
  };
  "/v1/calendar": {
    get: operations["Bus_GetCalendarData"];
  };
  "/v1/completeOrder/{orderId}": {
    post: operations["Bus_CompleteOrder"];
  };
  "/v1/createOrder/{busId}": {
    post: operations["Bus_CreateOrder"];
  };
  "/v1/frequentCities": {
    get: operations["Bus_GetFrequentCities"];
  };
  "/v1/internalContactInfo": {
    post: operations["Bus_ChangeInternalContactInfo"];
  };
  "/v1/order/{orderId}": {
    get: operations["Bus_OrderDetail"];
    delete: operations["Bus_Refund"];
  };
  "/v1/order/{orderId}/calculateRefund": {
    post: operations["Bus_CalculateRefund"];
  };
  "/v1/order/{orderId}/discount": {
    post: operations["Bus_ApplyDiscount"];
    delete: operations["Bus_RemoveDiscount"];
  };
  "/v1/order/{orderId}/passengers": {
    post: operations["Bus_AddPassengers"];
  };
  "/v1/order/{orderId}/refundReasons": {
    get: operations["Bus_RefundReasons"];
  };
  "/v1/order/{orderId}/seats": {
    post: operations["Bus_AddSeats"];
  };
  "/v1/orders": {
    get: operations["Bus_GetOrders"];
  };
  "/v1/prepare": {
    post: operations["Bus_PrepareBusList"];
  };
  "/v1/reserve/{orderId}": {
    post: operations["Bus_Reserve"];
  };
  "/v1/seats": {
    get: operations["Bus_AvailableSeats"];
  };
  "/v1/stations": {
    get: operations["Bus_GetStations"];
  };
  "/v1/stations/all": {
    get: operations["Bus_GetAllStations"];
  };
  "/v1/ticket/{orderId}/pdf": {
    get: operations["Bus_TicketPDF"];
  };
}

export interface definitions {
  AdminAdminRRSendActionBody: {
    action?: definitions["busRefundStatus"];
  };
  AdminAdminRefundBody: {
    refundReason?: definitions["busRefundReason"];
  };
  AdminNewCommentBody: {
    body?: string;
  };
  AdminUpdateRefundStatusBody: {
    status?: definitions["busRefundStatus"];
  };
  BusAddPassengersBody: {
    leaderUserId?: string;
    passengerIds?: string[];
  };
  BusAddSeatsBody: {
    seats?: number[];
  };
  BusApplyDiscountBody: {
    discountCode?: string;
  };
  BusCalculateRefundBody: {
    refundReason?: definitions["busRefundReason"];
  };
  BusCompleteOrderBody: {
    seatNumber?: number[];
    passengers?: definitions["busPassengers"];
    passengerIds?: string[];
  };
  /**
   * @default UNDEFINED
   * @enum {string}
   */
  apibusAvailability:
    | "UNDEFINED"
    | "SEAT_AVAILABLE"
    | "SEAT_UNAVAILABLE_MAN"
    | "SEAT_UNAVAILABLE_WOMAN"
    | "SEAT_UNAVAILABLE_EMPTY";
  apibusAvailableSeatsResponse: {
    busMap?: definitions["apibusBusMap"][];
  };
  apibusBusListResponse: {
    busInfo?: definitions["busBusInfo"][];
    /** Format: int64 */
    coveragePercent?: number;
    isFinished?: boolean;
    isCapacityFull?: boolean;
  };
  apibusBusMap: {
    /** Format: int64 */
    floorNumber?: number;
    /** Format: int64 */
    column?: number;
    /** Format: int64 */
    row?: number;
    seat?: definitions["apibusSeat"][];
  };
  /**
   * @default VIP
   * @enum {string}
   */
  apibusBusType: "VIP" | "NORMAL";
  /**
   * @default PERSIAN
   * @enum {string}
   */
  apibusCalendarType: "PERSIAN" | "GREGORIAN";
  apibusDateQuery: {
    /** Format: int64 */
    fromDate?: string;
    /** Format: int64 */
    tillDate?: string;
  };
  /**
   * @default GENDER_TYPE_UNDEFINE
   * @enum {string}
   */
  apibusGender:
    | "GENDER_TYPE_UNDEFINE"
    | "GENDER_TYPE_FEMALE"
    | "GENDER_TYPE_MALE";
  /**
   * - ORDER_STATUS_BUY_FAILED: ORDER_STATUS_PAYMENT_SUCCESS = 8;
   * @default ORDER_STATUS_UNDEFINED
   * @enum {string}
   */
  apibusOrderStatus:
    | "ORDER_STATUS_UNDEFINED"
    | "ORDER_STATUS_ORDER_CREATED"
    | "ORDER_STATUS_ORDER_SEAT_ADDED"
    | "ORDER_STATUS_ORDER_PASSENGER_ADDED"
    | "ORDER_STATUS_ORDER_CONTACT_INFO_ADDED"
    | "ORDER_STATUS_ORDER_RESERVED"
    | "ORDER_STATUS_RESERVATION_EXPIRED"
    | "ORDER_STATUS_PAYMENT_FAILED"
    | "ORDER_STATUS_BUY_FAILED"
    | "ORDER_STATUS_BUY_CONFIRMED"
    | "ORDER_STATUS_REFUND_REQUESTED"
    | "ORDER_STATUS_REFUND_ACCEPTED"
    | "ORDER_STATUS_REFUND_REJECTED"
    | "ORDER_STATUS_REFUND_FAILED"
    | "ORDER_STATUS_PENDING"
    | "ORDER_STATUS_PAYMENT_REFUND_SUCCESS"
    | "ORDER_STATUS_PAYMENT_REFUND_FAILED"
    | "ORDER_STATUS_PAYMENT_REFUND_PENDING";
  apibusPassengerInfo: {
    name?: string;
    gender?: definitions["apibusGender"];
    nationalCode?: string;
    phoneNumber?: string;
    birthDate?: string;
    userId?: string;
    englishName?: string;
    passportId?: string;
    passportExpireDate?: string;
  };
  apibusRefund: {
    /** Format: uint64 */
    refundPercent?: string;
    /** Format: uint64 */
    refundAmount?: string;
    status?: definitions["busRefundStatus"];
    refundReason?: definitions["busRefundReason"];
  };
  apibusRefundPolicy: {
    /** Format: uint64 */
    percent?: string;
    text?: string;
  };
  apibusSeat: {
    /** Format: int64 */
    x?: number;
    /** Format: int64 */
    y?: number;
    /** Format: int64 */
    seatNumber?: number;
    availability?: definitions["apibusAvailability"];
  };
  busAdminRRCommentsResponse: {
    comments?: definitions["busRRComment"][];
  };
  busAdminRRRequest: {
    orderNumber?: string;
    saleNumber?: string;
    refundStatus?: definitions["busRefundStatus"];
    departureDate?: definitions["apibusDateQuery"];
    refundDate?: definitions["apibusDateQuery"];
    /** Format: int32 */
    pageNumber?: number;
    /** Format: int32 */
    pageLimit?: number;
    providerName?: string;
    userPhone?: string;
    ticketNumber?: string;
    nationalCode?: string;
  };
  busAdminRRResponse: {
    list?: definitions["busAdminRefundList"][];
    /** Format: int64 */
    pages?: string;
  };
  busAdminRefundList: {
    orderId?: string;
    orderNumber?: string;
    userPhone?: string;
    userId?: string;
    refundStatus?: definitions["busRefundStatus"];
    /** Format: int64 */
    departureDate?: string;
    originCity?: string;
    destinationCity?: string;
    ticketNumber?: string;
    saleId?: string;
    originTerminal?: string;
    destinationTerminal?: string;
    providerName?: string;
    /** Format: int64 */
    refundedDate?: string;
    refundReason?: definitions["busRefundReason"];
    refundAmount?: string;
    refundPenalty?: string;
    totalPrice?: string;
    leaderName?: string;
  };
  busAlertRequest: {
    id?: string;
    isActive?: boolean;
    originCode?: string;
    destinationCode?: string;
    /** Format: int64 */
    departureDate?: string;
  };
  busApplyDiscountResponse: {
    applied?: boolean;
    reason?: string;
    discountCode?: string;
    /** Format: uint64 */
    payAmount?: string;
  };
  busBusCompanyGroups: {
    group?: definitions["busCompanyGroups"][];
  };
  busBusInfo: {
    busId?: string;
    busName?: string;
    companyName?: string;
    companyGroup?: string;
    /** Format: int64 */
    departureDate?: string;
    departureDateString?: string;
    departureHourString?: string;
    originStation?: string;
    originCity?: string;
    destinationStation?: string;
    destinationCity?: string;
    /** Format: int64 */
    remainingSeats?: number;
    /** Format: uint64 */
    price?: string;
    /** Format: uint64 */
    finalPrice?: string;
    /** Format: int64 */
    discount?: number;
    promote?: string;
    finalDestinationCity?: string;
    busType?: definitions["apibusBusType"];
    logo?: string;
    /** Format: uint64 */
    distance?: string;
    otherDestinations?: string[];
    refundPolicy?: definitions["apibusRefundPolicy"][];
    roadMap?: definitions["busRoadMap"][];
    isInternational?: boolean;
    refundable?: boolean;
    providerName?: string;
  };
  busBusRefundBody: {
    refundReason?: definitions["busRefundReason"];
  };
  busBusReserveBody: {
    paymentType?: definitions["busPaymentType"];
  };
  busCalcRefundResponse: {
    /** Format: uint64 */
    ticketPrice?: string;
    /** Format: uint64 */
    totalPrice?: string;
    ticketId?: string;
    refundData?: definitions["busRefundPrices"];
  };
  busCalendarData: {
    minimumPrice?: string;
    gregorianDepartureDate?: string;
    persianDepartureDate?: string;
  };
  busChangeContactInfoRequest: {
    orderId?: string;
    phoneNumber?: string;
    email?: string;
  };
  busCompanyGroups: {
    companyName?: string;
    companyGroup?: string;
  };
  busCreateAlertResponse: {
    id?: string;
    message?: string;
  };
  busDiscount: {
    code?: string;
    /** Format: int64 */
    amount?: string;
    hasError?: boolean;
    message?: string;
  };
  busFilterOrder: {
    orderNumber?: string;
    ticketNumber?: string;
    orderStatus?: definitions["apibusOrderStatus"];
    userPhone?: string;
    nationalCode?: string;
    companyGroup?: string;
    departureDate?: definitions["apibusDateQuery"];
    issuedDate?: definitions["apibusDateQuery"];
    /** Format: int32 */
    pageNumber?: number;
    /** Format: int32 */
    pageLimit?: number;
    providerName?: string;
  };
  busGetAlertResponse: {
    id?: string;
    isActive?: boolean;
    originCode?: string;
    destinationCode?: string;
    /** Format: int64 */
    departureDate?: string;
    isModuleAvailable?: boolean;
  };
  busGetCalendarDataResponse: {
    calendarData?: definitions["busCalendarData"][];
  };
  busGetCreditsResponse: {
    credits?: definitions["busProviderCredit"][];
  };
  busGetOrderStatus: {
    status?: definitions["busOrderStatusesResponse"][];
  };
  busGetRefundStatus: {
    status?: definitions["busRefundStatusesResponse"][];
  };
  busGetTicketPDFResponse: {
    url?: string;
  };
  busNewFrequentCity: {
    city?: string;
    /** Format: int64 */
    Rank?: string;
  };
  busOrder: {
    passengers?: definitions["busPassengers"];
    seats?: number[];
    /** Format: uint64 */
    totalPrice?: string;
    busInfo?: definitions["busBusInfo"];
    orderStatus?: definitions["apibusOrderStatus"];
    orderId?: string;
    orderNumber?: string;
    /** Format: int64 */
    issueDate?: string;
    issueDateString?: string;
    issueHourString?: string;
    issueDateTimeString?: string;
    ticket?: definitions["busTicket"];
    payment?: definitions["busPayment"];
    refund?: definitions["apibusRefund"];
    userPhone?: string;
    userID?: string;
    internalContactPhone?: string;
    internalEmail?: string;
    /** Format: int64 */
    expireDate?: string;
    expireDateString?: string;
    expireHourString?: string;
    expireDateTimeString?: string;
    /** Format: int64 */
    createDate?: string;
    createDateString?: string;
    createHourString?: string;
    createDateTimeString?: string;
    infoMessage?: string;
    discount?: definitions["busDiscount"];
    /** Format: uint64 */
    basePrice?: string;
  };
  busOrderID: {
    orderId?: string;
  };
  busOrderList: {
    orderId?: string;
    orderNumber?: string;
    orderStatus?: definitions["apibusOrderStatus"];
    userPhone?: string;
    companyName?: string;
    /** Format: int64 */
    departureDate?: string;
    originCity?: string;
    destinationCity?: string;
    originStation?: string;
    destinationStation?: string;
    ticket?: definitions["busTicket"];
    passengers?: definitions["busPassengers"];
    payment?: definitions["busPayment"];
    refund?: definitions["busRefundAdmin"];
    provider?: string;
    /** Format: int64 */
    issuedDate?: string;
  };
  busOrderLists: {
    list?: definitions["busOrderList"][];
    /** Format: int64 */
    pages?: string;
  };
  busOrderStatusesResponse: {
    label?: string;
    value?: definitions["apibusOrderStatus"];
  };
  busOrders: {
    order?: definitions["busOrder"][];
  };
  busPassengers: {
    leaderName?: string;
    leaderGender?: definitions["apibusGender"];
    nationalCode?: string[];
    providerContactPhone?: string;
    passengersInfo?: definitions["apibusPassengerInfo"][];
    leaderUserId?: string;
  };
  busPayment: {
    id?: string;
    currentStep?: string;
    payload?: definitions["busPaymentPayload"];
    status?: definitions["busPaymentStatus"];
    /** Format: int64 */
    paymentTime?: string;
    PaymentType?: definitions["busPaymentType"];
    /** Format: int32 */
    version?: number;
    data?: { [key: string]: string };
  };
  busPaymentPayload: {
    orderId?: string;
    userId?: string;
    paymentId?: string;
    /** Format: int64 */
    serviceId?: number;
    /** Format: uint64 */
    price?: string;
    rrn?: string;
    mask?: string;
  };
  /**
   * @default PAYMENT_STATUS_UNDEFINED
   * @enum {string}
   */
  busPaymentStatus:
    | "PAYMENT_STATUS_UNDEFINED"
    | "PAYMENT_STATUS_CREATED"
    | "PAYMENT_STATUS_CANCELED"
    | "PAYMENT_STATUS_REJECTED"
    | "PAYMENT_STATUS_SUCCESSFUL";
  /**
   * @default wallet
   * @enum {string}
   */
  busPaymentType: "wallet" | "direct";
  busPrepareBusListRequest: {
    /** Format: int64 */
    originStationCode?: string;
    /** Format: int64 */
    destinationStationCode?: string;
    /** Format: int64 */
    departureDate?: string;
  };
  busPrepareBustListResponse: {
    requestId?: string;
    /** Format: int64 */
    validUntil?: string;
    /** Format: int32 */
    maxRequests?: number;
    loadingMessage?: string;
    /** Format: int32 */
    secondsBetweenRequests?: number;
    /** Format: int64 */
    validSeconds?: string;
  };
  busProviderCredit: {
    providerName?: string;
    /** Format: int64 */
    credit?: string;
    callTime?: string;
  };
  busRRComment: {
    orderId?: string;
    authorId?: string;
    authorName?: string;
    body?: string;
    /** Format: int64 */
    createdAt?: string;
  };
  busRRGetActionsResponse: {
    actions?: definitions["busRefundStatus"][];
  };
  busRefundAdmin: {
    refundId?: string;
    /** Format: uint64 */
    provideRefundPercent?: string;
    /** Format: uint64 */
    provideRefundAmount?: string;
    /** Format: uint64 */
    ticketPrice?: string;
    /** Format: uint64 */
    totalPrice?: string;
    /** Format: uint64 */
    refundAmount?: string;
    /** Format: uint64 */
    refundPercent?: string;
    refundStatus?: definitions["busRefundStatus"];
    RefundReason?: definitions["busRefundReason"];
  };
  busRefundPrices: {
    /** Format: uint64 */
    penaltyPercent?: string;
    /** Format: uint64 */
    refundPenalty?: string;
    /** Format: uint64 */
    refundAmount?: string;
  };
  /**
   * @default REFUNDREASON_UNDEFINED
   * @enum {string}
   */
  busRefundReason: "REFUNDREASON_UNDEFINED" | "REFUNDREASON_BY_CRCN";
  busRefundReasonItem: {
    successText?: string;
    online?: boolean;
    title?: string;
    refundReason?: definitions["busRefundReason"];
  };
  busRefundReasonsResponse: {
    refundReasonItems?: definitions["busRefundReasonItem"][];
  };
  /**
   * @default REFUND_STATUS_UNDEFINED
   * @enum {string}
   */
  busRefundStatus:
    | "REFUND_STATUS_UNDEFINED"
    | "REFUND_STATUS_REQUESTED"
    | "REFUND_STATUS_FAILED"
    | "REFUND_STATUS_REJECTED"
    | "REFUND_STATUS_SUCCESSFUL"
    | "REFUND_STATUS_PAYMENT_SUCCESSFUL"
    | "REFUND_STATUS_PAYMENT_FAILED"
    | "REFUND_STATUS_PAYMENT_PENDING";
  busRefundStatusesResponse: {
    label?: string;
    value?: definitions["busRefundStatus"];
  };
  busRemoveDiscountResponse: {
    removed?: boolean;
    reason?: string;
    /** Format: uint64 */
    payAmount?: string;
  };
  busReserveResponse: {
    paymentJwt?: string;
    serviceId?: string;
    /** Format: int64 */
    price?: string;
    provider?: string;
    /** Format: int64 */
    valideUntil?: string;
  };
  busRoadMap: {
    name?: string;
    distance?: string;
  };
  /** TODO lang */
  busStationInfo: {
    stationCode?: string;
    stationName?: string;
    cityName?: string;
    provinceName?: string;
    countryName?: string;
    seoCode?: string;
  };
  busStationSearchResponse: {
    stations?: definitions["busStationInfo"][];
  };
  busTicket: {
    Seat?: string[];
    TicketNumber?: string;
    VerId?: string;
    SaleId?: string;
    TerminalId?: string;
  };
  busTicketPDFResponse: {
    url?: string;
  };
  busUpdateAlertResponse: {
    id?: string;
    message?: string;
  };
  protobufAny: {
    "@type"?: string;
  } & { [key: string]: unknown };
  rpcStatus: {
    /** Format: int32 */
    code?: number;
    message?: string;
    details?: definitions["protobufAny"][];
  };
}

export interface operations {
  Admin_getCompanyGroups: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busBusCompanyGroups"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_GetCredits: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busGetCreditsResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_CreateFrequentCity: {
    parameters: {
      body: {
        body: definitions["busNewFrequentCity"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: { [key: string]: unknown };
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_DeleteFrequentCity: {
    parameters: {
      path: {
        city: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: { [key: string]: unknown };
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_UpdateRefundStatus: {
    parameters: {
      path: {
        orderId: string;
      };
      body: {
        body: definitions["AdminUpdateRefundStatusBody"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: { [key: string]: unknown };
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_AdminRefundReasons: {
    parameters: {
      path: {
        orderId: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busRefundReasonsResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_AdminCalculateRefund: {
    parameters: {
      path: {
        orderId: string;
      };
      query: {
        refundReason?: "REFUNDREASON_UNDEFINED" | "REFUNDREASON_BY_CRCN";
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busCalcRefundResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_AdminRefund: {
    parameters: {
      path: {
        orderId: string;
      };
      body: {
        body: definitions["AdminAdminRefundBody"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: { [key: string]: unknown };
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_AdminGetOrderStatus: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busGetOrderStatus"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_AdminFilterOrder: {
    parameters: {
      body: {
        body: definitions["busFilterOrder"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busOrderLists"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_AdminOrderDetails: {
    parameters: {
      path: {
        orderId: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busOrder"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_GetTicketPDF: {
    parameters: {
      path: {
        orderId: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busGetTicketPDFResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_AdminRRList: {
    parameters: {
      body: {
        body: definitions["busAdminRRRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busAdminRRResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_AdminRRGetActions: {
    parameters: {
      path: {
        orderId: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busRRGetActionsResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_GetRRComments: {
    parameters: {
      path: {
        orderId: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busAdminRRCommentsResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_NewComment: {
    parameters: {
      path: {
        orderId: string;
      };
      body: {
        body: definitions["AdminNewCommentBody"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: { [key: string]: unknown };
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_AdminRRSendAction: {
    parameters: {
      path: {
        orderId: string;
      };
      body: {
        body: definitions["AdminAdminRRSendActionBody"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: { [key: string]: unknown };
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_AdminGetRRStatus: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busGetRefundStatus"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_GetAlert: {
    parameters: {
      query: {
        originCode?: string;
        destinationCode?: string;
        departureDate?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busGetAlertResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_CreateAlert: {
    parameters: {
      body: {
        body: definitions["busAlertRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busCreateAlertResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_UpdateAlert: {
    parameters: {
      body: {
        body: definitions["busAlertRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busUpdateAlertResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_GetBusList: {
    parameters: {
      query: {
        requestId?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["apibusBusListResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_GetCalendarData: {
    parameters: {
      query: {
        originCode?: string;
        destinationCode?: string;
        from?: string;
        to?: string;
        calendarType?: "PERSIAN" | "GREGORIAN";
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busGetCalendarDataResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_CompleteOrder: {
    parameters: {
      path: {
        orderId: string;
      };
      body: {
        body: definitions["BusCompleteOrderBody"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: { [key: string]: unknown };
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_CreateOrder: {
    parameters: {
      path: {
        busId: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busOrderID"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_GetFrequentCities: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busStationSearchResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_ChangeInternalContactInfo: {
    parameters: {
      body: {
        body: definitions["busChangeContactInfoRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: { [key: string]: unknown };
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_OrderDetail: {
    parameters: {
      path: {
        orderId: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busOrder"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_Refund: {
    parameters: {
      path: {
        orderId: string;
      };
      body: {
        body: definitions["busBusRefundBody"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: { [key: string]: unknown };
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_CalculateRefund: {
    parameters: {
      path: {
        orderId: string;
      };
      body: {
        body: definitions["BusCalculateRefundBody"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busCalcRefundResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_ApplyDiscount: {
    parameters: {
      path: {
        orderId: string;
      };
      body: {
        body: definitions["BusApplyDiscountBody"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busApplyDiscountResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_RemoveDiscount: {
    parameters: {
      path: {
        orderId: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busRemoveDiscountResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_AddPassengers: {
    parameters: {
      path: {
        orderId: string;
      };
      body: {
        body: definitions["BusAddPassengersBody"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: { [key: string]: unknown };
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_RefundReasons: {
    parameters: {
      path: {
        orderId: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busRefundReasonsResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_AddSeats: {
    parameters: {
      path: {
        orderId: string;
      };
      body: {
        body: definitions["BusAddSeatsBody"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: { [key: string]: unknown };
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_GetOrders: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busOrders"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_PrepareBusList: {
    parameters: {
      body: {
        body: definitions["busPrepareBusListRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busPrepareBustListResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_Reserve: {
    parameters: {
      path: {
        orderId: string;
      };
      body: {
        body: definitions["busBusReserveBody"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busReserveResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_AvailableSeats: {
    parameters: {
      query: {
        busId?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["apibusAvailableSeatsResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_GetStations: {
    parameters: {
      query: {
        query?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busStationSearchResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_GetAllStations: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busStationSearchResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Bus_TicketPDF: {
    parameters: {
      path: {
        orderId: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["busTicketPDFResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
}

export interface external {}
