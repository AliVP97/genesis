/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/admin/error/create": {
    post: operations["Admin_CreateError"];
  };
  "/v1/admin/error/list": {
    get: operations["Admin_GetErrors"];
  };
  "/v1/admin/error/update": {
    post: operations["Admin_UpdateError"];
  };
  "/v1/calendar": {
    get: operations["Calendar_Get"];
  };
  "/v1/cities": {
    get: operations["Province_GetProvinces"];
  };
  "/v1/city/all": {
    get: operations["Province_AllCities"];
  };
  "/v1/city/{provinceCode}": {
    get: operations["Province_GetCities"];
  };
  "/v1/config/get": {
    get: operations["Config_Get"];
  };
  "/v1/invitation": {
    get: operations["Invitation_Get"];
  };
  "/v1/invitation/friends": {
    get: operations["Invitation_GetFriends"];
  };
  "/v1/invitation/friends/new": {
    post: operations["Invitation_AddFriends"];
  };
  "/v1/notification": {
    get: operations["Notification_Get"];
  };
  "/v1/notification/update/{id}": {
    patch: operations["Notification_Update"];
  };
  "/v1/profile": {
    get: operations["Profile_Profile"];
    patch: operations["Profile_Update"];
  };
  "/v1/profile/deactive": {
    delete: operations["Profile_Deactive"];
  };
  "/v1/profile/education": {
    get: operations["Profile_Education"];
  };
  "/v1/profile/gist": {
    get: operations["Profile_Gist"];
  };
  "/v1/profile/interest": {
    get: operations["Profile_Interest"];
  };
  "/v1/profile/jobs": {
    get: operations["Profile_Jobs"];
  };
  "/v1/profile/setting": {
    get: operations["Profile_Setting"];
    patch: operations["Profile_UpdateSetting"];
  };
  "/v1/socialmedia": {
    get: operations["SocialMedia_GetSocialMedia"];
  };
  "/v1/user/quickaction": {
    get: operations["QuickAction_Get"];
    post: operations["QuickAction_Add"];
    delete: operations["QuickAction_Delete"];
  };
  "/v1/user/quickaction/order": {
    post: operations["QuickAction_Order"];
  };
  "/v1/website/application/otp": {
    post: operations["Web_SendOTP"];
  };
  "/v2/profile": {
    get: operations["Profile_ProfileV2"];
    patch: operations["Profile_UpdateV2"];
  };
}

export interface definitions {
  CalendarResponseCalendarData: {
    /** Format: int64 */
    day?: number;
    /** Format: int64 */
    month?: number;
    type?: string;
    /** Format: int64 */
    year?: number;
    description?: string;
  };
  DataUpdateLinks: {
    type?: string;
    url?: string;
    icon?: string;
    text?: string;
    color?: string;
  };
  /**
   * @default ANDROID
   * @enum {string}
   */
  SendOTPRequestDevice: "ANDROID" | "IOS" | "Web";
  /** Response contains a message to show if the process was successful or not */
  apiusermanagerResponse: {
    message: string;
    /** Format: int64 */
    progress: number;
  };
  protobufAny: {
    "@type"?: string;
  } & { [key: string]: unknown };
  rpcStatus: {
    /** Format: int32 */
    code?: number;
    message?: string;
    details?: definitions["protobufAny"][];
  };
  usermanagerAddInvitedFriendsRequest: {
    referCode?: string;
  };
  usermanagerAddInvitedFriendsResponse: {
    message?: string;
  };
  usermanagerAddQuickActionRequest: {
    type: string;
    /** Format: int64 */
    price: number;
    /** Format: int64 */
    serviceId: number;
    data: { [key: string]: string };
  };
  usermanagerAddQuickActionResponse: {
    message: string;
  };
  usermanagerCalendarResponse: {
    /** Format: int64 */
    version?: number;
    data?: definitions["CalendarResponseCalendarData"][];
  };
  usermanagerCityInfo: {
    /** Format: uint64 */
    id?: string;
    areaCode?: string;
    areaName?: string;
    regionCode?: string;
    regionName?: string;
    provinceCode?: string;
    provinceName?: string;
    provinceNameEn?: string;
    cityCode?: string;
    cityName?: string;
    cityNameEn?: string;
  };
  usermanagerCityListResponse: {
    data?: definitions["usermanagerCityInfo"][];
  };
  usermanagerConfigMessage: {
    services?: { [key: string]: boolean };
    data?: { [key: string]: string };
    appUrls?: { [key: string]: string };
  };
  usermanagerCreateErrorRequest: {
    message: string;
    lang: string;
    /** Format: int64 */
    httpCode: number;
    /** Format: int32 */
    code: number;
    /** Format: int64 */
    serviceCode: number;
    status: string;
    description: string;
  };
  usermanagerData: {
    currentVersion?: string;
    lastVersion?: string;
    title: string;
    features: string[];
    description: string;
    update: boolean;
    publishedAt: string;
    updateLinks?: definitions["DataUpdateLinks"][];
    CurrentVersionName?: string;
  };
  usermanagerDeleteQuickActionResponse: {
    message: string;
  };
  usermanagerError: {
    /** Format: int32 */
    id: number;
    message: string;
    lang: string;
    /** Format: int64 */
    httpCode: number;
    /** Format: int32 */
    code: number;
    /** Format: int64 */
    serviceCode: number;
    status: string;
    description: string;
  };
  usermanagerErrorCreateResponse: {
    /** Format: int64 */
    code: number;
    message: string;
  };
  usermanagerErrorListResponse: {
    /** Format: int64 */
    code: number;
    message: string;
    data: definitions["usermanagerError"][];
  };
  usermanagerErrorUpdateResponse: {
    /** Format: int64 */
    code: number;
    message: string;
  };
  usermanagerGetConfigResponse: {
    title: string;
    description: string;
    update: boolean;
    config: definitions["usermanagerConfigMessage"];
    publishedAt: string;
    data: definitions["usermanagerData"];
    hintMessage: definitions["usermanagerHintMessage"];
  };
  usermanagerGetInviteInfoResponse: {
    title?: string;
    qrCode?: string;
    footer?: string;
    referCode?: string;
    share?: string;
  };
  usermanagerGetInvitedFriendsResponse: {
    data?: definitions["usermanagerInvitedFriends"][];
  };
  usermanagerGetNotificationResponse: {
    data?: definitions["usermanagerUserNotification"][];
  };
  usermanagerGetQuickActionResponse: {
    /**
     * uint32 total = 1 [(google.api.field_behavior) = REQUIRED];
     *  uint32 page = 2 [(google.api.field_behavior) = REQUIRED];
     */
    data: definitions["usermanagerQuickActionMessage"][];
  };
  usermanagerHintMessage: {
    type?: string;
    message?: string;
    header?: string;
  };
  usermanagerInvitedFriends: {
    userName?: string;
    phoneNumber?: string;
    invitedScore?: boolean;
    /** Format: int32 */
    invitedScoreValue?: number;
    firstTransactionScore?: boolean;
    /** Format: int32 */
    firstTransactionScoreValue?: number;
  };
  usermanagerOrderQuickActionRequest: {
    id: string;
  };
  usermanagerOrderQuickActionResponse: {
    /** Format: int64 */
    serviceId: number;
    orderId: string;
    provider: string;
    /** Format: int64 */
    price: number;
    message: string;
  };
  usermanagerProfileDeactiveResponse: {
    message?: string;
  };
  usermanagerProfileEducationResponse: {
    educations?: string[];
  };
  usermanagerProfileInterestResponse: {
    interests?: string[];
  };
  usermanagerProfileJobsResponse: {
    jobs?: string[];
  };
  usermanagerProvincesListResponse: {
    data?: definitions["usermanagerCityInfo"][];
  };
  usermanagerQuickActionMessage: {
    id: string;
    type: string;
    /** Format: int64 */
    price: number;
    /** Format: int64 */
    serviceId: number;
    title: string;
    subtitle: string;
    description: string;
    data: { [key: string]: string };
  };
  usermanagerSendOTPRequest: {
    mobile: string;
    device: definitions["SendOTPRequestDevice"];
  };
  usermanagerSendOTPResponse: {
    message: string;
  };
  usermanagerSocialInfo: {
    /** Format: uint64 */
    id?: string;
    links?: string;
    icons?: string;
  };
  usermanagerSocialMediaListResponse: {
    socialdata?: definitions["usermanagerSocialInfo"][];
  };
  usermanagerUpdateUserNotificationResponse: {
    message?: string;
  };
  usermanagerUpdateUserProfile: {
    image: string;
    city: string;
    education: string;
    marriage: boolean;
    career: string;
    interests: string;
    disability: string;
    mobile: string;
    email: string;
    telephone: string;
    firstName: string;
    lastName: string;
    nationalCode: string;
    /** Format: date-time */
    birthDate: string;
    cityOfBirth: string;
    gender: string;
    saveGallery?: boolean;
    sendSms?: boolean;
    sendEmail?: boolean;
    sendNotify?: boolean;
  };
  /** UserProfileSetting contains gist of profile */
  usermanagerUpdateUserProfileSetting: {
    saveGallery: boolean;
    sendSms: boolean;
    sendEmail: boolean;
    sendNotify: boolean;
  };
  usermanagerUpdateUserProfileSettingResponse: {
    message: string;
  };
  usermanagerUpdateUserProfileV2: {
    image: string;
    city: string;
    selectedEducation: string;
    marriage: boolean;
    selectedCareer: string;
    selectedInterests: string[];
    disability: string;
    mobile: string;
    email: string;
    telephone: string;
    firstName: string;
    lastName: string;
    nationalCode: string;
    /** Format: date-time */
    birthDate: string;
    cityOfBirth: string;
    gender: string;
    saveGallery?: boolean;
    sendSms?: boolean;
    sendEmail?: boolean;
    sendNotify?: boolean;
  };
  usermanagerUserNotification: {
    id?: string;
    message?: string;
    readed?: boolean;
    /** Format: int64 */
    readedAt?: string;
    /** Format: int64 */
    createdAt?: string;
  };
  /** UserProfile contains all the field of user profile */
  usermanagerUserProfile: {
    image: string;
    /** Format: int64 */
    progress: number;
    city: string;
    education: string;
    marriage: boolean;
    career: string;
    interests: string;
    disability: string;
    mobile: string;
    email: string;
    telephone: string;
    firstName: string;
    lastName: string;
    nationalCode: string;
    nationalCodeDesc: string;
    /** Format: date-time */
    birthDate: string;
    cityOfBirth: string;
    gender: string;
    saveGallery?: boolean;
    sendSms?: boolean;
    sendEmail?: boolean;
    sendNotify?: boolean;
  };
  /** UserProfileGist contains gist of profile */
  usermanagerUserProfileGist: {
    firstName: string;
    lastName: string;
    image: string;
    /** Format: int64 */
    progress: number;
    mobile: string;
    /** Format: int64 */
    unReadedMessage: number;
  };
  /** UserProfileSetting contains gist of profile */
  usermanagerUserProfileSetting: {
    saveGallery: boolean;
    sendSms: boolean;
    sendEmail: boolean;
    sendNotify: boolean;
  };
  /** UserProfileV2 contains all the field of user profile */
  usermanagerUserProfileV2: {
    image: string;
    /** Format: int64 */
    progress: number;
    city: string;
    selectedEducation: string;
    marriage: boolean;
    selectedCareer: string;
    selectedInterests: string[];
    disability: string;
    mobile: string;
    email: string;
    telephone: string;
    firstName: string;
    lastName: string;
    nationalCode: string;
    nationalCodeDesc: string;
    /** Format: date-time */
    birthDate: string;
    cityOfBirth: string;
    gender: string;
    saveGallery?: boolean;
    sendSms?: boolean;
    sendEmail?: boolean;
    sendNotify?: boolean;
  };
  usermanagerUserProfileV2Response: {
    profile?: definitions["usermanagerUserProfileV2"];
    careersList?: string[];
    educationsList?: string[];
    interestsList?: string[];
  };
}

export interface operations {
  Admin_CreateError: {
    parameters: {
      body: {
        body: definitions["usermanagerCreateErrorRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerErrorCreateResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_GetErrors: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerErrorListResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Admin_UpdateError: {
    parameters: {
      body: {
        body: definitions["usermanagerError"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerErrorUpdateResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Calendar_Get: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerCalendarResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Province_GetProvinces: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerProvincesListResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Province_AllCities: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerCityListResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Province_GetCities: {
    parameters: {
      path: {
        provinceCode: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerCityListResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Config_Get: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerGetConfigResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Invitation_Get: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerGetInviteInfoResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Invitation_GetFriends: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerGetInvitedFriendsResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Invitation_AddFriends: {
    parameters: {
      body: {
        body: definitions["usermanagerAddInvitedFriendsRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerAddInvitedFriendsResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Notification_Get: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerGetNotificationResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Notification_Update: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerUpdateUserNotificationResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Profile_Profile: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerUserProfile"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Profile_Update: {
    parameters: {
      body: {
        body: definitions["usermanagerUpdateUserProfile"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["apiusermanagerResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Profile_Deactive: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerProfileDeactiveResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Profile_Education: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerProfileEducationResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Profile_Gist: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerUserProfileGist"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Profile_Interest: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerProfileInterestResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Profile_Jobs: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerProfileJobsResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Profile_Setting: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerUserProfileSetting"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Profile_UpdateSetting: {
    parameters: {
      body: {
        body: definitions["usermanagerUpdateUserProfileSetting"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerUpdateUserProfileSettingResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  SocialMedia_GetSocialMedia: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerSocialMediaListResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  QuickAction_Get: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerGetQuickActionResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  QuickAction_Add: {
    parameters: {
      body: {
        body: definitions["usermanagerAddQuickActionRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerAddQuickActionResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  QuickAction_Delete: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerDeleteQuickActionResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  QuickAction_Order: {
    parameters: {
      body: {
        body: definitions["usermanagerOrderQuickActionRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerOrderQuickActionResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Web_SendOTP: {
    parameters: {
      body: {
        body: definitions["usermanagerSendOTPRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerSendOTPResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Profile_ProfileV2: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["usermanagerUserProfileV2Response"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Profile_UpdateV2: {
    parameters: {
      body: {
        body: definitions["usermanagerUpdateUserProfileV2"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["apiusermanagerResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
}

export interface external {}
