/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/admin/backendservices": {
    get: operations["admin_GetBackendServices"];
  };
  "/v1/admin/banner/banner/list": {
    post: operations["admin_BannerList"];
  };
  "/v1/admin/banner/global/insert": {
    post: operations["admin_BannerGlobalInsert"];
  };
  "/v1/admin/banner/global/list": {
    post: operations["admin_BannerGlobalList"];
  };
  "/v1/admin/banner/global/update": {
    post: operations["admin_BannerGlobalUpdate"];
  };
  "/v1/admin/banner/global/view": {
    post: operations["admin_BannerGlobalView"];
  };
  "/v1/admin/banner/insert": {
    post: operations["admin_BannerInsert"];
  };
  "/v1/admin/banner/links": {
    post: operations["admin_BannerLinks"];
  };
  "/v1/admin/banner/update": {
    post: operations["admin_BannerUpdate"];
  };
  "/v1/admin/banner/view": {
    post: operations["admin_BannerView"];
  };
  "/v1/admin/calculate": {
    post: operations["admin_Calculate"];
  };
  "/v1/admin/category/list": {
    get: operations["admin_GetCategories"];
  };
  "/v1/admin/discount": {
    get: operations["admin_IndexDiscount"];
    post: operations["admin_CreateDiscount"];
  };
  "/v1/admin/discount/{id}": {
    get: operations["admin_ShowDiscount"];
    put: operations["admin_UpdateDiscount"];
    delete: operations["admin_DeleteDiscount"];
  };
  "/v1/admin/discount/{id}/status/toggle": {
    put: operations["admin_DiscountStatusToggle"];
  };
  "/v1/admin/error/create": {
    post: operations["admin_CreateError"];
  };
  "/v1/admin/error/list": {
    get: operations["admin_GetErrors"];
  };
  "/v1/admin/error/update": {
    post: operations["admin_UpdateError"];
  };
  "/v1/admin/event/create": {
    post: operations["admin_CreateEvent"];
  };
  "/v1/admin/event/get/{id}": {
    get: operations["admin_GetEvent"];
  };
  "/v1/admin/event/list": {
    get: operations["admin_GetEvents"];
  };
  "/v1/admin/group-category/create": {
    post: operations["admin_CreateGroupCategory"];
  };
  "/v1/admin/group-item/create": {
    post: operations["admin_CreateGroupAndItem"];
  };
  "/v1/admin/performanceinformation/{discountID}": {
    get: operations["admin_PerformanceInformation"];
  };
  "/v1/banner": {
    get: operations["Club_Banner"];
  };
  "/v1/banner/global": {
    get: operations["Club_BannerGlobal"];
  };
  "/v1/calculate": {
    post: operations["Campaign_Calculate"];
  };
  "/v1/chanceList": {
    get: operations["Campaign_GetChanceList"];
  };
  "/v1/club/event": {
    get: operations["Club_Event"];
  };
  "/v1/club/event/category": {
    get: operations["Club_Category"];
  };
  "/v1/club/event/group/category/{id}": {
    get: operations["Club_GroupCategory"];
  };
  "/v1/club/event/group/lottery/{id}": {
    get: operations["Club_LotteryEventGroup"];
  };
  "/v1/club/event/group/prediction/vote": {
    post: operations["Club_PredictionVote"];
  };
  "/v1/club/event/group/prediction/{id}": {
    get: operations["Club_PredictionEventGroup"];
  };
  "/v1/club/event/group/specialottery/{id}": {
    get: operations["Club_SpecialLotteryEventGroup"];
  };
  "/v1/club/event/group/voting/vote": {
    post: operations["Club_VotingVote"];
  };
  "/v1/club/event/group/voting/{id}": {
    get: operations["Club_VotingEventGroup"];
  };
  "/v1/club/media/{type}/{id}": {
    get: operations["Club_Media"];
  };
  "/v1/score": {
    get: operations["Campaign_GetScore"];
    post: operations["Campaign_PostScore"];
  };
}

export interface definitions {
  BackendServicesResserviceLists: {
    /** Format: int64 */
    id?: number;
    name?: string;
    displayName?: string;
  };
  BannerLinksResLinkList: {
    /** Format: uint64 */
    id?: string;
    type?: string;
    status?: string;
    description?: string;
  };
  EventListResponseEventCategory: {
    /** Format: uint64 */
    id?: string;
    name?: string;
    status?: string;
  };
  GroupVote: {
    /** Format: int64 */
    itemId?: string;
    data?: definitions["GroupVoteItem"][];
    /** success in Prediction or not */
    status?: string;
  };
  GroupVoteItem: {
    /** Format: int64 */
    id?: string;
    /** Format: int64 */
    count?: string;
  };
  /**
   * @default VALID
   * @enum {string}
   */
  IndexDiscountReqindexExpired: "VALID" | "EXPIRED";
  IndexDiscountResIndexDiscountLists: {
    /** Format: uint64 */
    id?: string;
    discountCode?: string;
    descriptions?: string;
    /** Format: int64 */
    expireDate?: string;
    serviceID?: string;
    discountDetail?: string;
    discountType?: string;
    /** Format: int64 */
    discountAmount?: string;
    /** Format: int64 */
    totalCountLimitation?: string;
    /** Format: int64 */
    countLimitation?: string;
    createdAt?: string;
    creator?: string;
    status?: string;
    statusEnum?: string;
  };
  ShowDiscountResLog: {
    /** Format: uint64 */
    id?: string;
    Creator?: string;
    FieldValue?: string;
    createdAt?: string;
  };
  adminUpdateDiscountBody: {
    discountCode?: string;
    descriptions?: string;
    /** Format: int64 */
    serviceID?: number;
    discountType: definitions["campaignUpdateDiscountReqdiscountTypeEnum"];
    /** Format: int64 */
    discountAmount?: string;
    /** Format: int64 */
    maximumDiscountAmount?: string;
    /** Format: int64 */
    minimumPurchasePrice?: string;
    /** Format: int64 */
    expireDate?: string;
    /** Format: int64 */
    countLimitation?: string;
    /** Format: int64 */
    totalCountLimitation?: string;
    customerSegment?: string;
    ids?: string[];
  };
  /**
   * @default general
   * @enum {string}
   */
  apicampaignType: "general" | "accurate" | "combination";
  campaignBackendServicesRes: {
    lists?: definitions["BackendServicesResserviceLists"][];
  };
  campaignBannerGlobalInsertRes: {
    /** Format: uint64 */
    id?: string;
  };
  campaignBannerGlobalListRes: {
    lists?: definitions["campaignBannerGlobalListResBannerLists"][];
    /** Format: int32 */
    pages?: number;
  };
  campaignBannerGlobalListResBannerLists: {
    /** Format: uint64 */
    id?: string;
    /** Format: uint64 */
    eventId?: string;
    image?: string;
    type?: string;
    status?: string;
    /** Format: uint64 */
    order?: string;
    createdAt?: string;
    updateAt?: string;
    link?: string;
    platform?: string;
    pageName?: string;
  };
  campaignBannerGlobalUpdateRes: {
    Success?: boolean;
  };
  campaignBannerGlobalViewRes: {
    lists?: definitions["campaignBannerGlobalViewResBannerLists"][];
  };
  campaignBannerGlobalViewResBannerLists: {
    /** Format: uint64 */
    id?: string;
    /** Format: uint64 */
    eventId?: string;
    image?: string;
    type?: string;
    status?: string;
    /** Format: uint64 */
    order?: string;
    createdAt?: string;
    updateAt?: string;
    link?: string;
    platform?: string;
    pageName?: string;
  };
  campaignBannerInsertRes: {
    /** Format: uint64 */
    id?: string;
  };
  campaignBannerLinksRes: {
    lists?: definitions["BannerLinksResLinkList"][];
  };
  campaignBannerListRes: {
    lists?: definitions["campaignBannerListResBannerLists"][];
    /** Format: int32 */
    pages?: number;
  };
  campaignBannerListResBannerLists: {
    /** Format: uint64 */
    id?: string;
    /** Format: uint64 */
    eventId?: string;
    image?: string;
    type?: string;
    status?: string;
    /** Format: int32 */
    order?: number;
    createdAt?: string;
    updateAt?: string;
    link?: string;
  };
  campaignBannerResponse: {
    data?: definitions["campaignBannerResponseBanner"][];
  };
  campaignBannerResponseBanner: {
    /** Format: int64 */
    id?: string;
    /** Format: int64 */
    eventId?: string;
    image?: string;
    type?: string;
    status?: string;
    link?: string;
  };
  campaignBannerUpdateRes: {
    Success?: boolean;
  };
  campaignBannerViewRes: {
    lists?: definitions["campaignBannerViewResBannerLists"][];
  };
  campaignBannerViewResBannerLists: {
    /** Format: uint64 */
    id?: string;
    /** Format: uint64 */
    eventId?: string;
    image?: string;
    type?: string;
    status?: string;
    /** Format: int32 */
    order?: number;
    createdAt?: string;
    updateAt?: string;
    link?: string;
  };
  campaignCalculateRequest: {
    userId?: string;
    mobile?: string;
    /** Format: int64 */
    serviceId?: string;
    /** Format: int64 */
    price?: string;
    rrn?: string;
  };
  campaignCalculateResponse: {
    message?: string;
  };
  campaignCalculateScore: {
    /** Format: int64 */
    serviceId?: string;
    /** Format: int64 */
    price?: string;
  };
  campaignCalculateUserScoreResponse: {
    /** Format: int64 */
    score?: number;
    /** Format: int64 */
    chance?: number;
    message?: string;
  };
  campaignCategoryListResponse: {
    categories?: definitions["campaignCategoryListResponseCategory"][];
  };
  campaignCategoryListResponseCategory: {
    /** Format: uint64 */
    id?: string;
    name?: string;
    status?: string;
  };
  campaignCategoryResponse: {
    data?: definitions["campaignCategoryResponseCategory"][];
  };
  campaignCategoryResponseCategory: {
    /** Format: int64 */
    id?: string;
    name?: string;
  };
  campaignChanceList: {
    /** Format: int64 */
    startChanceCode?: string;
    /** Format: int64 */
    endChanceCode?: string;
    /** Format: int32 */
    count?: number;
  };
  campaignCreateDiscountReq: {
    discountCode?: string;
    descriptions?: string;
    /** Format: int64 */
    serviceID?: number;
    discountType: definitions["campaignCreateDiscountReqdiscountTypeEnum"];
    /** Format: int64 */
    discountAmount?: string;
    /** Format: int64 */
    maximumDiscountAmount?: string;
    /** Format: int64 */
    minimumPurchasePrice?: string;
    /** Format: int64 */
    expireDate?: string;
    /** Format: int64 */
    countLimitation?: string;
    /** Format: int64 */
    totalCountLimitation?: string;
    /** Format: int64 */
    budgetLimitation?: string;
    customerSegment?: string;
    ids?: string[];
  };
  /**
   * @default CONSTANT
   * @enum {string}
   */
  campaignCreateDiscountReqdiscountTypeEnum: "CONSTANT" | "PERCENTAGE";
  campaignCreateDiscountRes: {
    message?: string;
  };
  campaignCreateErrorRequest: {
    message?: string;
    lang?: string;
    /** Format: int64 */
    httpCode?: number;
    /** Format: int32 */
    code?: number;
    /** Format: int64 */
    serviceCode?: number;
    status?: string;
    description?: string;
  };
  campaignCreateEventRequest: {
    type?: string;
    title?: string;
    subTitle?: string;
    /** Format: int64 */
    startAt?: string;
    /** Format: int64 */
    endAt?: string;
    invisible?: boolean;
    testMobile?: boolean;
    status?: string;
    /** Format: int64 */
    campaignCode?: string;
    pageType?: string;
    platform?: string;
    /** Format: int64 */
    order?: number;
    /** Format: int64 */
    categoryId?: string;
    /** Format: uint64 */
    limit?: string;
    image?: string;
    cover?: string;
    video?: string;
    description?: string;
  };
  campaignCreateEventResponse: {
    /** Format: uint64 */
    id?: string;
  };
  campaignCreateGroupAndItemRequest: {
    /** Format: uint64 */
    eventId?: string;
    groups?: definitions["campaignCreateGroupAndItemRequestGroup"][];
  };
  campaignCreateGroupAndItemRequestGroup: {
    title?: string;
    image?: string;
    cover?: string;
    status?: string;
    groupCategoryId?: string[];
    /** Format: int64 */
    startAt?: string;
    /** Format: int64 */
    endAt?: string;
    type?: string;
    description?: string;
    /** Format: int64 */
    order?: number;
    items?: definitions["campaignCreateGroupAndItemRequestGroupItem"][];
  };
  campaignCreateGroupAndItemRequestGroupItem: {
    title?: string;
    description?: string;
    image?: string;
    video?: string;
    status?: string;
    data?: string;
    showData?: boolean;
    /** Format: int64 */
    order?: number;
  };
  campaignCreateGroupAndItemResponse: {
    groups?: definitions["campaignCreateGroupAndItemResponseGroup"][];
  };
  campaignCreateGroupAndItemResponseGroup: {
    /** Format: uint64 */
    id?: string;
    items?: definitions["campaignCreateGroupAndItemResponseGroupItem"][];
  };
  campaignCreateGroupAndItemResponseGroupItem: {
    /** Format: uint64 */
    id?: string;
  };
  campaignCreateGroupCategoryRequest: {
    /** Format: uint64 */
    eventId?: string;
    groupCategories?: definitions["campaignCreateGroupCategoryRequestGroupCategory"][];
  };
  campaignCreateGroupCategoryRequestGroupCategory: {
    name?: string;
    /** Format: int64 */
    order?: number;
    status?: string;
    /** Format: int64 */
    startAt?: string;
    /** Format: int64 */
    endAt?: string;
  };
  campaignCreateGroupCategoryResponse: {
    groupCategories?: definitions["campaignCreateGroupCategoryResponseGroupCategory"][];
  };
  campaignCreateGroupCategoryResponseGroupCategory: {
    /** Format: uint64 */
    id?: string;
    /** Format: uint64 */
    eventId?: string;
    name?: string;
    /** Format: int64 */
    order?: number;
    status?: string;
    /** Format: int64 */
    startAt?: string;
    /** Format: int64 */
    endAt?: string;
  };
  campaignDeleteDiscountRes: {
    message?: string;
  };
  campaignError: {
    /** Format: int32 */
    id?: number;
    message?: string;
    lang?: string;
    /** Format: int64 */
    httpCode?: number;
    /** Format: int32 */
    code?: number;
    /** Format: int64 */
    serviceCode?: number;
    status?: string;
    description?: string;
  };
  campaignErrorCreateResponse: {
    /** Format: int64 */
    code?: number;
    message?: string;
  };
  campaignErrorListResponse: {
    /** Format: int64 */
    code?: number;
    message?: string;
    data?: definitions["campaignError"][];
  };
  campaignErrorUpdateResponse: {
    /** Format: int64 */
    code?: number;
    message?: string;
  };
  campaignEventGetResponse: {
    /** Format: uint64 */
    id?: string;
    type?: string;
    title?: string;
    subTitle?: string;
    /** Format: int64 */
    startAt?: string;
    /** Format: int64 */
    endAt?: string;
    invisible?: boolean;
    testMobile?: boolean;
    status?: string;
    /** Format: int64 */
    campaignCode?: string;
    pageType?: string;
    platform?: string;
    /** Format: int64 */
    order?: number;
    category?: definitions["campaignEventGetResponseCategory"];
    /** Format: uint64 */
    limit?: string;
    image?: string;
    cover?: string;
    video?: string;
    description?: string;
    groupCategories?: definitions["campaignEventGetResponseGroupCategory"][];
    groups?: definitions["campaignEventGetResponseGroup"][];
  };
  campaignEventGetResponseCategory: {
    /** Format: uint64 */
    id?: string;
    name?: string;
    status?: string;
  };
  campaignEventGetResponseGroup: {
    title?: string;
    image?: string;
    cover?: string;
    status?: string;
    groupCategories?: definitions["campaignEventGetResponseGroupCategory"][];
    /** Format: int64 */
    startAt?: string;
    /** Format: int64 */
    endAt?: string;
    type?: string;
    description?: string;
    /** Format: int32 */
    order?: number;
    items?: definitions["campaignEventGetResponseGroupItem"][];
  };
  campaignEventGetResponseGroupCategory: {
    /** Format: uint64 */
    id?: string;
    name?: string;
    /** Format: int32 */
    order?: number;
    status?: string;
    /** Format: int64 */
    startAt?: string;
    /** Format: int64 */
    endAt?: string;
  };
  campaignEventGetResponseGroupItem: {
    title?: string;
    description?: string;
    image?: string;
    video?: string;
    status?: string;
    data?: string;
    showData?: boolean;
    /** Format: int32 */
    order?: number;
  };
  campaignEventListResponse: {
    events?: definitions["campaignEventListResponseEvent"][];
  };
  campaignEventListResponseEvent: {
    /** Format: uint64 */
    id?: string;
    type?: string;
    title?: string;
    subTitle?: string;
    /** Format: int64 */
    startAt?: string;
    /** Format: int64 */
    endAt?: string;
    invisible?: boolean;
    testMobile?: boolean;
    status?: string;
    /** Format: int64 */
    campaignCode?: string;
    pageType?: string;
    platform?: string;
    /** Format: int64 */
    order?: number;
    category?: definitions["EventListResponseEventCategory"];
    /** Format: uint64 */
    limit?: string;
    image?: string;
    cover?: string;
    video?: string;
    description?: string;
  };
  campaignEventResponse: {
    data?: definitions["campaignEventResponseEvent"][];
  };
  campaignEventResponseEvent: {
    /** Format: int64 */
    id?: string;
    title?: string;
    subTitle?: string;
    image?: string;
    cover?: string;
    description?: string;
    /** Format: int64 */
    categoryId?: string;
    eventType?: definitions["campaignEventType"];
    pageType?: definitions["campaignPageType"];
    status?: string;
    video?: string;
    /** Format: int64 */
    startAt?: string;
    /** Format: int64 */
    endAt?: string;
  };
  /**
   * @default prediction
   * @enum {string}
   */
  campaignEventType: "prediction" | "lottery" | "voting" | "specialottery";
  campaignGetScoreResponse: {
    /** Format: int64 */
    score?: number;
    /** Format: int64 */
    chance?: number;
    /** Format: int64 */
    exchangeRate?: number;
    /** Format: int64 */
    exchangeFraction?: number;
    message?: string;
    enablePointToChance?: boolean;
    enableCode?: boolean;
  };
  campaignGroupcategoryResponse: {
    data?: definitions["campaignGroupcategoryResponseCategory"][];
    subTitle?: string;
    groupType?: string;
  };
  campaignGroupcategoryResponseCategory: {
    /** Format: int64 */
    id?: string;
    name?: string;
    enabled?: boolean;
  };
  campaignIndexDiscountRes: {
    lists?: definitions["IndexDiscountResIndexDiscountLists"][];
    /** Format: int64 */
    pages?: number;
  };
  campaignLotteryEventGroupResponse: {
    data?: definitions["campaignLotteryEventGroupResponseGroup"][];
  };
  campaignLotteryEventGroupResponseGroup: {
    /** Format: int64 */
    id?: string;
    image?: string;
    /** enabled, disabled */
    status?: string;
    data?: definitions["campaignLotteryEventGroupResponseItem"][];
    /** Format: int64 */
    categoryId?: string;
  };
  campaignLotteryEventGroupResponseItem: {
    /** Format: int64 */
    id?: string;
    title?: string;
    description?: string;
    code?: string;
    image?: string;
    status?: string;
    data?: string;
  };
  /**
   * @default group
   * @enum {string}
   */
  campaignMediaRequestType: "group" | "item";
  campaignMediaResponse: {
    data?: definitions["campaignMediaResponseMedia"][];
  };
  campaignMediaResponseMedia: {
    url?: string;
    type?: string;
    place?: string;
  };
  /**
   * @default single
   * @enum {string}
   */
  campaignPageType: "single" | "multiple";
  campaignPerformanceInformationRes: {
    /** Format: uint64 */
    numberOfUsedCode?: string;
    /** Format: uint64 */
    percentOfUsedCode?: string;
  };
  campaignPostScoreRequest: {
    /** Format: int32 */
    numberOfExchangeRate?: number;
  };
  campaignPostUserScoreResponse: {
    /** Format: int64 */
    score?: number;
    /** Format: int64 */
    chance?: number;
  };
  campaignPredictionEventGroupResponse: {
    data?: definitions["campaignPredictionEventGroupResponseGroup"][];
    cover?: string;
    title?: string;
    pageType?: definitions["campaignPageType"];
    eventType?: definitions["campaignEventType"];
    subTitle?: string;
    groupType?: string;
  };
  campaignPredictionEventGroupResponseGroup: {
    /** Format: int64 */
    id?: string;
    title?: string;
    cover?: string;
    /** enabled, disabled */
    status?: string;
    /** Format: int64 */
    categoryId?: string;
    /** Format: int64 */
    startAt?: string;
    /** Format: int64 */
    endAt?: string;
    /** for group model Predictions */
    type?: definitions["apicampaignType"];
    description?: string;
    data?: definitions["campaignPredictionEventGroupResponseItem"][];
    isVoted?: boolean;
    vote?: definitions["GroupVote"];
  };
  campaignPredictionEventGroupResponseItem: {
    /** Format: int64 */
    id?: string;
    title?: string;
    description?: string;
    image?: string;
  };
  campaignPredictionVoteRequest: {
    /** Format: uint64 */
    groupId?: string;
    /** Format: uint64 */
    itemId?: string;
    data?: definitions["campaignPredictionVoteRequestItem"][];
    /** for group model General fill itemId, for Accurate fill data for Combination fill all */
    type?: definitions["apicampaignType"];
  };
  campaignPredictionVoteRequestItem: {
    /** Format: uint64 */
    id?: string;
    /** Format: uint64 */
    counter?: string;
  };
  campaignPredictionVoteResponse: {
    message?: string;
  };
  campaignShowDiscountRes: {
    /** Format: uint64 */
    id?: string;
    discountCode?: string;
    descriptions?: string;
    /** Format: int64 */
    serviceID?: number;
    discountType: definitions["campaignShowDiscountResdiscountTypeEnum"];
    /** Format: int64 */
    discountAmount?: string;
    /** Format: int64 */
    maximumDiscountAmount?: string;
    /** Format: int64 */
    minimumPurchasePrice?: string;
    /** Format: int64 */
    expireDate?: string;
    /** Format: int64 */
    countLimitation?: string;
    /** Format: int64 */
    totalCountLimitation?: string;
    /** Format: int64 */
    budgetLimitation?: string;
    customerSegment?: string;
    logs?: definitions["ShowDiscountResLog"][];
  };
  /**
   * @default CONSTANT
   * @enum {string}
   */
  campaignShowDiscountResdiscountTypeEnum: "CONSTANT" | "PERCENTAGE";
  campaignStatusToggleRes: {
    message?: string;
  };
  /**
   * @default CONSTANT
   * @enum {string}
   */
  campaignUpdateDiscountReqdiscountTypeEnum: "CONSTANT" | "PERCENTAGE";
  campaignUpdateDiscountRes: {
    message?: string;
  };
  campaignUserChanceList: {
    chances?: definitions["campaignChanceList"][];
    /** Format: int64 */
    chance?: number;
  };
  campaignVotingEventGroupResponse: {
    data?: definitions["campaignVotingEventGroupResponseGroup"][];
    cover?: string;
    video?: string;
    title?: string;
    pageType?: definitions["campaignPageType"];
    eventType?: definitions["campaignEventType"];
  };
  campaignVotingEventGroupResponseGroup: {
    /** Format: int64 */
    id?: string;
    title?: string;
    image?: string;
    cover?: string;
    /** enabled, disabled */
    status?: string;
    /** Format: int64 */
    categoryId?: string;
    /** Format: int64 */
    startAt?: string;
    /** Format: int64 */
    endAt?: string;
    description?: string;
    data?: definitions["campaignVotingEventGroupResponseItem"][];
    vote?: string[];
  };
  campaignVotingEventGroupResponseItem: {
    /** Format: int64 */
    id?: string;
    title?: string;
    image?: string;
    video?: string;
    status?: string;
    /**
     * the Progress users selected in Accurate
     * Format: int64
     */
    progress?: number;
    showProgress?: boolean;
    button?: string;
    votedMessage?: string;
    preVotedMessage?: string;
  };
  campaignVotingVoteRequest: {
    /** Format: int64 */
    itemId?: string;
    /** Format: int64 */
    groupId?: string;
  };
  campaignVotingVoteResponse: {
    message?: string;
  };
  protobufAny: {
    "@type"?: string;
  } & { [key: string]: unknown };
  rpcStatus: {
    /** Format: int32 */
    code?: number;
    message?: string;
    details?: definitions["protobufAny"][];
  };
}

export interface operations {
  admin_GetBackendServices: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignBackendServicesRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_BannerList: {
    parameters: {
      query: {
        pageNumber?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignBannerListRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_BannerGlobalInsert: {
    parameters: {
      query: {
        eventId?: string;
        image?: string;
        type?: string;
        status?: string;
        order?: string;
        link?: string;
        platform?: string;
        pageName?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignBannerGlobalInsertRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_BannerGlobalList: {
    parameters: {
      query: {
        pageNumber?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignBannerGlobalListRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_BannerGlobalUpdate: {
    parameters: {
      query: {
        id?: string;
        eventId?: string;
        image?: string;
        type?: string;
        status?: string;
        order?: string;
        link?: string;
        platform?: string;
        pageName?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignBannerGlobalUpdateRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_BannerGlobalView: {
    parameters: {
      query: {
        id?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignBannerGlobalViewRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_BannerInsert: {
    parameters: {
      query: {
        eventId?: string;
        image?: string;
        type?: string;
        status?: string;
        order?: number;
        link?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignBannerInsertRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_BannerLinks: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignBannerLinksRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_BannerUpdate: {
    parameters: {
      query: {
        id?: string;
        eventId?: string;
        image?: string;
        type?: string;
        status?: string;
        order?: number;
        link?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignBannerUpdateRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_BannerView: {
    parameters: {
      query: {
        id?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignBannerViewRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_Calculate: {
    parameters: {
      body: {
        body: definitions["campaignCalculateRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignCalculateResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_GetCategories: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignCategoryListResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_IndexDiscount: {
    parameters: {
      query: {
        pageNumber?: number;
        pageLimit?: number;
        id?: string;
        discountCode?: string;
        serviceID?: number[];
        expireDate?: string;
        expired?: "VALID" | "EXPIRED";
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignIndexDiscountRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_CreateDiscount: {
    parameters: {
      body: {
        body: definitions["campaignCreateDiscountReq"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignCreateDiscountRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_ShowDiscount: {
    parameters: {
      path: {
        id: string;
      };
      query: {
        creator?: string;
        logs?: string[];
        fromDate?: string;
        tillDate?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignShowDiscountRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_UpdateDiscount: {
    parameters: {
      path: {
        id: string;
      };
      body: {
        body: definitions["adminUpdateDiscountBody"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignUpdateDiscountRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_DeleteDiscount: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignDeleteDiscountRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_DiscountStatusToggle: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignStatusToggleRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_CreateError: {
    parameters: {
      body: {
        body: definitions["campaignCreateErrorRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignErrorCreateResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_GetErrors: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignErrorListResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_UpdateError: {
    parameters: {
      body: {
        body: definitions["campaignError"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignErrorUpdateResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_CreateEvent: {
    parameters: {
      body: {
        body: definitions["campaignCreateEventRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignCreateEventResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_GetEvent: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignEventGetResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_GetEvents: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignEventListResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_CreateGroupCategory: {
    parameters: {
      body: {
        body: definitions["campaignCreateGroupCategoryRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignCreateGroupCategoryResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_CreateGroupAndItem: {
    parameters: {
      body: {
        body: definitions["campaignCreateGroupAndItemRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignCreateGroupAndItemResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  admin_PerformanceInformation: {
    parameters: {
      path: {
        discountID: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignPerformanceInformationRes"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Club_Banner: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignBannerResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Club_BannerGlobal: {
    parameters: {
      query: {
        page?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignBannerResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Campaign_Calculate: {
    parameters: {
      body: {
        body: definitions["campaignCalculateScore"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignCalculateUserScoreResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Campaign_GetChanceList: {
    parameters: {
      query: {
        page?: number;
        pageSize?: number;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignUserChanceList"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Club_Event: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignEventResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Club_Category: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignCategoryResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Club_GroupCategory: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignGroupcategoryResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Club_LotteryEventGroup: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignLotteryEventGroupResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Club_PredictionVote: {
    parameters: {
      body: {
        body: definitions["campaignPredictionVoteRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignPredictionVoteResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Club_PredictionEventGroup: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignPredictionEventGroupResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Club_SpecialLotteryEventGroup: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignLotteryEventGroupResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Club_VotingVote: {
    parameters: {
      body: {
        body: definitions["campaignVotingVoteRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignVotingVoteResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Club_VotingEventGroup: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignVotingEventGroupResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Club_Media: {
    parameters: {
      path: {
        type: "group" | "item";
        id: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignMediaResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Campaign_GetScore: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignGetScoreResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
  Campaign_PostScore: {
    parameters: {
      body: {
        body: definitions["campaignPostScoreRequest"];
      };
    };
    responses: {
      /** A successful response. */
      200: {
        schema: definitions["campaignPostUserScoreResponse"];
      };
      /** An unexpected error response. */
      default: {
        schema: definitions["rpcStatus"];
      };
    };
  };
}

export interface external {}
